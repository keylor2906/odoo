# SOME DESCRIPTIVE TITLE.
# Copyright (C) Odoo S.A.
# This file is distributed under the same license as the odoo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: odoo 9.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-07-14 00:34-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

# 7075c78033c4405c85a2c83627c3c268
#: ../../reference/orm.rst:7
msgid "ORM API"
msgstr ""

# 32becebee6aa469ea505acb8ed073f45
#: ../../reference/orm.rst:10
msgid "Recordsets"
msgstr ""

# 36fdd5799b064852a188807f843e20ea
#: ../../reference/orm.rst:14
msgid ""
"This page documents the New API added in Odoo 8.0 which should be the "
"primary development API going forward. It also provides information about"
" porting from or bridging with the \"old API\" of versions 7 and earlier,"
" but does not explicitly document that API. See the old documentation for"
" that."
msgstr ""

# a2ddf91f4acf4c2ba18c2518182793c6
#: ../../reference/orm.rst:19
msgid ""
"Interaction with models and records is performed through recordsets, a "
"sorted set of records of the same model."
msgstr ""

# 36ab117cac55456b9655b491cd267b05
#: ../../reference/orm.rst:22
msgid ""
"contrary to what the name implies, it is currently possible for "
"recordsets to contain duplicates. This may change in the future."
msgstr ""

# 83b0c34645234903a381c4764ac20159
#: ../../reference/orm.rst:25
msgid ""
"Methods defined on a model are executed on a recordset, and their "
"``self`` is a recordset::"
msgstr ""

# 603cbf6369cd4b4e8959458e9b7cf74d
#: ../../reference/orm.rst:35
msgid ""
"Iterating on a recordset will yield new sets of *a single record* "
"(\"singletons\"), much like iterating on a Python string yields strings "
"of a single characters::"
msgstr ""

# b0ffa0508e8448348e8dcf9124f27847
#: ../../reference/orm.rst:45
msgid "Field access"
msgstr ""

# 010b21e008c54fc59aa6cbf041c6eb2f
#: ../../reference/orm.rst:47
msgid ""
"Recordsets provide an \"Active Record\" interface: model fields can be "
"read and written directly from the record, but only on singletons "
"(single-record recordsets). Setting a field's value triggers an update to"
" the database::"
msgstr ""

# 10ac817964824c8bb4b3e23114d474a6
#: ../../reference/orm.rst:57
msgid "Trying to read or write a field on multiple records will raise an error."
msgstr ""

# 84effe661a5d4157aabe37e598176f25
#: ../../reference/orm.rst:59
msgid ""
"Accessing a relational field (:class:`~odoo.fields.Many2one`, "
":class:`~odoo.fields.One2many`, :class:`~odoo.fields.Many2many`) *always*"
" returns a recordset, empty if the field is not set."
msgstr ""

# e4abcc8809944a1d9f66eaa26dae3b21
#: ../../reference/orm.rst:65
msgid ""
"each assignment to a field triggers a database update, when setting "
"multiple fields at the same time or setting fields on multiple records "
"(to the same value), use :meth:`~odoo.models.Model.write`::"
msgstr ""

# 2c917ff5b47f482dbf6e26db1b4b0d01
#: ../../reference/orm.rst:83
msgid "Record cache and prefetching"
msgstr ""

# 704f9d83ee3949bea68ef858204ca740
#: ../../reference/orm.rst:85
msgid ""
"Odoo maintains a cache for the fields of the records, so that not every "
"field access issues a database request, which would be terrible for "
"performance. The following example queries the database only for the "
"first statement::"
msgstr ""

# 666691040ec74e55bd0d48913aab578f
#: ../../reference/orm.rst:92
msgid ""
"To avoid reading one field on one record at a time, Odoo *prefetches* "
"records and fields following some heuristics to get good performance. "
"Once a field must be read on a given record, the ORM actually reads that "
"field on a larger recordset, and stores the returned values in cache for "
"later use. The prefetched recordset is usually the recordset from which "
"the record comes by iteration. Moreover, all simple stored fields "
"(boolean, integer, float, char, text, date, datetime, selection, "
"many2one) are fetched altogether; they correspond to the columns of the "
"model's table, and are fetched efficiently in the same query."
msgstr ""

# f3716467c0554c1cb7cfa489f18c0334
#: ../../reference/orm.rst:101
msgid ""
"Consider the following example, where ``partners`` is a recordset of 1000"
" records. Without prefetching, the loop would make 2000 queries to the "
"database. With prefetching, only one query is made::"
msgstr ""

# e0ebc948ab5e43db98e2ec5639245491
#: ../../reference/orm.rst:110
msgid ""
"The prefetching also works on *secondary records*: when relational fields"
" are read, their values (which are records) are  subscribed for future "
"prefetching. Accessing one of those secondary records prefetches all "
"secondary records from the same model. This makes the following example "
"generate only two queries, one for partners and one for countries::"
msgstr ""

# 80e351767a0e4a5ea5d0f64529c6cc15
#: ../../reference/orm.rst:122
msgid "Set operations"
msgstr ""

# a433a860426043e8ace3c0eb97f36924
#: ../../reference/orm.rst:124
msgid ""
"Recordsets are immutable, but sets of the same model can be combined "
"using various set operations, returning new recordsets. Set operations do"
" *not* preserve order."
msgstr ""

# f6ec1b17369a4ea7b4cd3412890bde54
#: ../../reference/orm.rst:130
msgid ""
"``record in set`` returns whether ``record`` (which must be a 1-element "
"recordset) is present in ``set``. ``record not in set`` is the inverse "
"operation"
msgstr ""

# 36a3d633cae747a3bfc28dce2a65bb20
#: ../../reference/orm.rst:133
msgid ""
"``set1 <= set2`` and ``set1 < set2`` return whether ``set1`` is a subset "
"of ``set2`` (resp. strict)"
msgstr ""

# 5be00d8dd3a041f59125f9f8bc8ede2f
#: ../../reference/orm.rst:135
msgid ""
"``set1 >= set2`` and ``set1 > set2`` return whether ``set1`` is a "
"superset of ``set2`` (resp. strict)"
msgstr ""

# 86dbfd1d96f94026ae5ccf22b377fdf2
#: ../../reference/orm.rst:137
msgid ""
"``set1 | set2`` returns the union of the two recordsets, a new recordset "
"containing all records present in either source"
msgstr ""

# a181d6e939b24f42b718ccd76d8bdb92
#: ../../reference/orm.rst:139
msgid ""
"``set1 & set2`` returns the intersection of two recordsets, a new "
"recordset containing only records present in both sources"
msgstr ""

# bebfc8b403aa47e1909db804c04cf983
#: ../../reference/orm.rst:141
msgid ""
"``set1 - set2`` returns a new recordset containing only records of "
"``set1`` which are *not* in ``set2``"
msgstr ""

# 35a77ae96b2f4966909164e332eae9a3
#: ../../reference/orm.rst:145
msgid "Other recordset operations"
msgstr ""

# 321d6402e5af43b890a885e1061535fe
#: ../../reference/orm.rst:147
msgid ""
"Recordsets are iterable so the usual Python tools are available for "
"transformation (:func:`python:map`, :func:`python:sorted`, "
":func:`~python:itertools.ifilter`, ...) however these return either a "
":class:`python:list` or an :term:`python:iterator`, removing the ability "
"to call methods on their result, or to use set operations."
msgstr ""

# e1959f6efc78480da60c0f32e8145b30
#: ../../reference/orm.rst:153
msgid ""
"Recordsets therefore provide these operations returning recordsets "
"themselves (when possible):"
msgstr ""

# f7b90c527cb94f1e8f4045d2709ca28e
#: ../../reference/orm.rst:165
msgid ":meth:`~odoo.models.Model.filtered`"
msgstr ""

# 731e9c755560499aa3080d129e24a2e5
#: ../../reference/orm.rst:157
msgid ""
"returns a recordset containing only records satisfying the provided "
"predicate function. The predicate can also be a string to filter by a "
"field being true or false::"
msgstr ""

# e4d8a4ce506b45bd97906ac9ef6f9efd
#: ../../reference/orm.rst:172
msgid ":meth:`~odoo.models.Model.sorted`"
msgstr ""

# ffef236078034c7993066622be9fdf75
#: ../../reference/orm.rst:168
msgid ""
"returns a recordset sorted by the provided key function. If no key is "
"provided, use the model's default sort order::"
msgstr ""

# a6dcaaaade4746688a44ce60fe2abfb7
#: ../../reference/orm.rst:190
msgid ":meth:`~odoo.models.Model.mapped`"
msgstr ""

# e8f9bf7a2bd24614af418a20d118bf0e
#: ../../reference/orm.rst:175
msgid ""
"applies the provided function to each record in the recordset, returns a "
"recordset if the results are recordsets::"
msgstr ""

# 754f239bb5cc457da2028a157b04f1ff
#: ../../reference/orm.rst:181
msgid "The provided function can be a string to get field values::"
msgstr ""

# b52efebb38b94ae29e79656b0c351262
#: ../../reference/orm.rst:193
msgid "Environment"
msgstr ""

# d46d2ad6b1cc40b08a6a81472e4a7cd3
#: ../../reference/orm.rst:195
msgid ""
"The :class:`~odoo.api.Environment` stores various contextual data used by"
" the ORM: the database cursor (for database queries), the current user "
"(for access rights checking) and the current context (storing arbitrary "
"metadata). The environment also stores caches."
msgstr ""

# 0022d24fc3be4cbba4fbb4130faf762f
#: ../../reference/orm.rst:200
msgid ""
"All recordsets have an environment, which is immutable, can be accessed "
"using :attr:`~odoo.models.Model.env` and gives access to the current user"
" (:attr:`~odoo.api.Environment.user`), the cursor "
"(:attr:`~odoo.api.Environment.cr`) or the context "
"(:attr:`~odoo.api.Environment.context`)::"
msgstr ""

# 073fd2e269794606bf702706a6c87237
#: ../../reference/orm.rst:213
msgid ""
"When creating a recordset from an other recordset, the environment is "
"inherited. The environment can be used to get an empty recordset in an "
"other model, and query that model::"
msgstr ""

# 4a0da7a684574865ac251ef4184fefc5
#: ../../reference/orm.rst:223
msgid "Altering the environment"
msgstr ""

# e21457f1dafa48d48b4a067d15730526
#: ../../reference/orm.rst:225
msgid ""
"The environment can be customized from a recordset. This returns a new "
"version of the recordset using the altered environment."
msgstr ""

# a68250b42e7b4233b855b059882c6de4
#: ../../reference/orm.rst:239
msgid ":meth:`~odoo.models.Model.sudo`"
msgstr ""

# 24acc364fb424b3eb077c96896e7ac22
#: ../../reference/orm.rst:229
msgid ""
"creates a new environment with the provided user set, uses the "
"administrator if none is provided (to bypass access rights/rules in safe "
"contexts), returns a copy of the recordset it is called on using the new "
"environment::"
msgstr ""

# ebd373cbecef4d00ab70fdddb3fdee3b
#: ../../reference/orm.rst:251
msgid ":meth:`~odoo.models.Model.with_context`"
msgstr ""

# ee0636729c8d45c393e1d99b01dea2c0
#: ../../reference/orm.rst:242
msgid ""
"can take a single positional parameter, which replaces the current "
"environment's context"
msgstr ""

# 1feea9b237a44b80a1d00604c649f999
#: ../../reference/orm.rst:244
msgid ""
"can take any number of parameters by keyword, which are added to either "
"the current environment's context or the context set during step 1"
msgstr ""

# 9bcb2f7aef5646519116f72290dc0c19
#: ../../reference/orm.rst:254
msgid ":meth:`~odoo.models.Model.with_env`"
msgstr ""

# de8f23654ee8472e8c26f81af7a9048a
#: ../../reference/orm.rst:254
msgid "replaces the existing environment entirely"
msgstr ""

# 07bd0d3d709c45418533d1ef38eead65
#: ../../reference/orm.rst:257
msgid "Common ORM methods"
msgstr ""

# 8ff7a92c8c8b4983824dc0bc6b2e6f96
#: ../../reference/orm.rst:273
msgid ":meth:`~odoo.models.Model.search`"
msgstr ""

# 2c5e4d0f05934b6fbb97cb903f43bd19
#: ../../reference/orm.rst:262
msgid ""
"Takes a :ref:`search domain <reference/orm/domains>`, returns a recordset"
" of matching records. Can return a subset of matching records (``offset``"
" and ``limit`` parameters) and be ordered (``order`` parameter)::"
msgstr ""

# 9fc4634159de4d36bdf3962a635c4873
#: ../../reference/orm.rst:272
msgid ""
"to just check if any record matches a domain, or count the number of "
"records which do, use :meth:`~odoo.models.Model.search_count`"
msgstr ""

# ca9ef2e4d6bf45a5a2d2c2b907a92d8a
#: ../../reference/orm.rst:280
msgid ":meth:`~odoo.models.Model.create`"
msgstr ""

# 54b00cc5d05a41629029eaea6aea47d0
#: ../../reference/orm.rst:276
msgid ""
"Takes a number of field values, and returns a recordset containing the "
"record created::"
msgstr ""

# 63f08709553a4493890ef900dd5dcc87
#: ../../reference/orm.rst:286
msgid ":meth:`~odoo.models.Model.write`"
msgstr ""

# fdf237184f59450b88c05236c575134c
#: ../../reference/orm.rst:283
msgid ""
"Takes a number of field values, writes them to all the records in its "
"recordset. Does not return anything::"
msgstr ""

# 28769732689845259541023ac2c2719a
#: ../../reference/orm.rst:295
msgid ":meth:`~odoo.models.Model.browse`"
msgstr ""

# 4ccb17d62a494b32bdfd1a04871900a6
#: ../../reference/orm.rst:289
msgid ""
"Takes a database id or a list of ids and returns a recordset, useful when"
" record ids are obtained from outside Odoo (e.g. round-trip through "
"external system) or :ref:`when calling methods in the old API "
"<reference/orm/oldapi>`::"
msgstr ""

# 6340ac3c766a4107bf9ff070bf1f15be
#: ../../reference/orm.rst:309
msgid ":meth:`~odoo.models.Model.exists`"
msgstr ""

# ba763ec334704727ba1ff5e716734be0
#: ../../reference/orm.rst:298
msgid ""
"Returns a new recordset containing only the records which exist in the "
"database. Can be used to check whether a record (e.g. obtained "
"externally) still exists::"
msgstr ""

# 5dd1557eb2104d298de6341609fe504a
#: ../../reference/orm.rst:305
msgid "or after calling a method which could have removed some records::"
msgstr ""

# 6d70274425404132b619089c67940cc0
#: ../../reference/orm.rst:316
msgid ":meth:`~odoo.api.Environment.ref`"
msgstr ""

# 76e22773be7c4f32802d53fe52460dfe
#: ../../reference/orm.rst:312
msgid ""
"Environment method returning the record matching a provided "
":term:`external id`::"
msgstr ""

# d3bcba4e78354d75bc63016e341ced8c
#: ../../reference/orm.rst:324
msgid ":meth:`~odoo.models.Model.ensure_one`"
msgstr ""

# f2f73d506f9346cd86ef24fdba4a3c94
#: ../../reference/orm.rst:319
msgid ""
"checks that the recordset is a singleton (only contains a single record),"
" raises an error otherwise::"
msgstr ""

# 948e48a9bce54aec936b4ecd2d1aa1bd
#: ../../reference/orm.rst:327
msgid "Creating Models"
msgstr ""

# f846c93be90f440fafbd4337017f4a94
#: ../../reference/orm.rst:329
msgid "Model fields are defined as attributes on the model itself::"
msgstr ""

# 98e72f566e0c4707a5f2bc7486a78990
#: ../../reference/orm.rst:337
msgid ""
"this means you can not define a field and a method with the same name, "
"they will conflict"
msgstr ""

# e11caa5bbe17405a9ce0657f285b5abf
#: ../../reference/orm.rst:340
msgid ""
"By default, the field's label (user-visible name) is a capitalized "
"version of the field name, this can be overridden with the ``string`` "
"parameter::"
msgstr ""

# ff95f6f7d84f4c4d80768f5516b05c7a
#: ../../reference/orm.rst:345
msgid ""
"For the various field types and parameters, see :ref:`the fields "
"reference <reference/orm/fields>`."
msgstr ""

# 64dda006879e4149b3d2d388063d1bb1
#: ../../reference/orm.rst:348
msgid "Default values are defined as parameters on fields, either a value::"
msgstr ""

# 06456064e95e4f6580efe23f9c5d3aec
#: ../../reference/orm.rst:352
msgid ""
"or a function called to compute the default value, which should return "
"that value::"
msgstr ""

# f7d1ea0e93c24920a967496ac9ab4d73
# 28f063791e9c4d06880ca880b0af3e1c
#: ../../reference/orm.rst:360 odoo.fields.Field:43 of
msgid "Computed fields"
msgstr ""

# 18050d86651c4d13bc55cc573df01d77
#: ../../reference/orm.rst:362
msgid ""
"Fields can be computed (instead of read straight from the database) using"
" the ``compute`` parameter. **It must assign the computed value to the "
"field**. If it uses the values of other *fields*, it should specify those"
" fields using :func:`~odoo.api.depends`::"
msgstr ""

# b9cc19e6e6d94760b86461eede388f42
#: ../../reference/orm.rst:375
msgid "dependencies can be dotted paths when using sub-fields::"
msgstr ""

# 5de8f55012af4313b9c6d3f3de1254ad
#: ../../reference/orm.rst:382
msgid ""
"computed fields are not stored by default, they are computed and returned"
" when requested. Setting ``store=True`` will store them in the database "
"and automatically enable searching"
msgstr ""

# d4536e7558da493597acf5d1156cdaa4
#: ../../reference/orm.rst:385
msgid ""
"searching on a computed field can also be enabled by setting the "
"``search`` parameter. The value is a method name returning a "
":ref:`reference/orm/domains`::"
msgstr ""

# 781cab1484c34993a78bb05cfbb86d14
#: ../../reference/orm.rst:396
msgid ""
"to allow *setting* values on a computed field, use the ``inverse`` "
"parameter. It is the name of a function reversing the computation and "
"setting the relevant fields::"
msgstr ""

# 1aa5eb6fbb4e4f26a054fe459c6cc620
#: ../../reference/orm.rst:412
msgid ""
"multiple fields can be computed at the same time by the same method, just"
" use the same method on all fields and set all of them::"
msgstr ""

# 5b7bc4ce8d0e4dcf804362af1e4529be
# 847137d3615d45e4a9b0f36d5ac539f6
#: ../../reference/orm.rst:427 odoo.fields.Field:110 of
msgid "Related fields"
msgstr ""

# beaa3b716d124a36bde98693596f24e5
#: ../../reference/orm.rst:429
msgid ""
"A special case of computed fields are *related* (proxy) fields, which "
"provide the value of a sub-field on the current record. They are defined "
"by setting the ``related`` parameter and like regular computed fields "
"they can be stored::"
msgstr ""

# dfed2a52ed694c7a98c3f4b6f3b72d9d
#: ../../reference/orm.rst:437
msgid "onchange: updating UI on the fly"
msgstr ""

# b9d1d0e329b540129d576df9ea36e40c
#: ../../reference/orm.rst:439
msgid ""
"When a user changes a field's value in a form (but hasn't saved the form "
"yet), it can be useful to automatically update other fields based on that"
" value e.g. updating a final total when the tax is changed or a new "
"invoice line is added."
msgstr ""

# 2c6a2b459e00480581c9941d1c4ff265
#: ../../reference/orm.rst:444
msgid ""
"computed fields are automatically checked and recomputed, they do not "
"need an ``onchange``"
msgstr ""

# 5f9c89835ba54d4a90d588638314927d
#: ../../reference/orm.rst:446
msgid ""
"for non-computed fields, the :func:`~odoo.api.onchange` decorator is used"
" to provide new field values::"
msgstr ""

# ccdb43317fbc40dd90078109153294f9
#: ../../reference/orm.rst:454
msgid ""
"the changes performed during the method are then sent to the client "
"program and become visible to the user"
msgstr ""

# 80f60e6fbc6b4428899b917dd9c648ab
#: ../../reference/orm.rst:457
msgid ""
"Both computed fields and new-API onchanges are automatically called by "
"the client without having to add them in views"
msgstr ""

# 83fb85470f674aac8670f6c1e9fcc1db
#: ../../reference/orm.rst:459
msgid ""
"It is possible to suppress the trigger from a specific field by adding "
"``on_change=\"0\"`` in a view::"
msgstr ""

# f394da3159054aa3aaa89fa80a4f3fc9
#: ../../reference/orm.rst:464
msgid ""
"will not trigger any interface update when the field is edited by the "
"user, even if there are function fields or explicit onchange depending on"
" that field."
msgstr ""

# ac0bef64000242f3b8b8ede8f8393e56
#: ../../reference/orm.rst:470
msgid ""
"``onchange`` methods work on virtual records assignment on these records "
"is not written to the database, just used to know which value to send "
"back to the client"
msgstr ""

# f3f717fce862492a869bd1c585753d9e
#: ../../reference/orm.rst:475
msgid "Low-level SQL"
msgstr ""

# cb1ffe65cf5e4cb6bbcffdfcb24f1f6d
#: ../../reference/orm.rst:477
msgid ""
"The :attr:`~odoo.api.Environment.cr` attribute on environments is the "
"cursor for the current database transaction and allows executing SQL "
"directly, either for queries which are difficult to express using the ORM"
" (e.g. complex joins) or for performance reasons::"
msgstr ""

# e5ca5fe781644f3ab40fa6a08155bc29
#: ../../reference/orm.rst:484
msgid ""
"Because models use the same cursor and the :class:`~odoo.api.Environment`"
" holds various caches, these caches must be invalidated when *altering* "
"the database in raw SQL, or further uses of models may become incoherent."
" It is necessary to clear caches when using ``CREATE``, ``UPDATE`` or "
"``DELETE`` in SQL, but not ``SELECT`` (which simply reads the database)."
msgstr ""

# 91735d456657416689d539a2643062ab
#: ../../reference/orm.rst:490
msgid ""
"Clearing caches can be performed using the "
":meth:`~odoo.api.Environment.invalidate_all` method of the "
":class:`~odoo.api.Environment` object."
msgstr ""

# 8570e766617a49f696575707e209d290
#: ../../reference/orm.rst:498
msgid "Compatibility between new API and old API"
msgstr ""

# d01d60f96e2948aabd60002d10314b96
#: ../../reference/orm.rst:500
msgid ""
"Odoo is currently transitioning from an older (less regular) API, it can "
"be necessary to manually bridge from one to the other manually:"
msgstr ""

# 0778d2821e73456d84881cc7e203a0ec
#: ../../reference/orm.rst:503
msgid ""
"RPC layers (both XML-RPC and JSON-RPC) are expressed in terms of the old "
"API, methods expressed purely in the new API are not available over RPC"
msgstr ""

# a57cba798b1448ea842aba3bf8a21c18
#: ../../reference/orm.rst:505
msgid ""
"overridable methods may be called from older pieces of code still written"
" in the old API style"
msgstr ""

# f5cdffad2ffb4664aadc41a08918b779
#: ../../reference/orm.rst:508
msgid "The big differences between the old and new APIs are:"
msgstr ""

# 5a666c9f4f564707aedd0170eea39a6f
#: ../../reference/orm.rst:510
msgid ""
"values of the :class:`~odoo.api.Environment` (cursor, user id and "
"context) are passed explicitly to methods instead"
msgstr ""

# 2fa5d12c6dd44b4d8c5bf73a246f1f82
#: ../../reference/orm.rst:512
msgid ""
"record data (:attr:`~odoo.models.Model.ids`) are passed explicitly to "
"methods, and possibly not passed at all"
msgstr ""

# abf15543a8b746368935cff3cc54d8ac
#: ../../reference/orm.rst:514
msgid "methods tend to work on lists of ids instead of recordsets"
msgstr ""

# 6439def2b6994f93b5b6480dd297fd41
#: ../../reference/orm.rst:516
msgid ""
"By default, methods are assumed to use the new API style and are not "
"callable from the old API style."
msgstr ""

# 4b78e8865f5c4589a9d317e5f53c62cc
#: ../../reference/orm.rst:519
msgid "calls from the new API to the old API are bridged"
msgstr ""

# 0632b956e7b74afc8ec4c6e4e95457db
#: ../../reference/orm.rst:522
msgid ""
"when using the new API style, calls to methods defined using the old API "
"are automatically converted on-the-fly, there should be no need to do "
"anything special::"
msgstr ""

# 7efec14617ce42cc8e3875001a9855f6
#: ../../reference/orm.rst:539
msgid "Two decorators can expose a new-style method to the old API:"
msgstr ""

# 980a9ada1a1447f08a5c0d926af48b7d
#: ../../reference/orm.rst:549
msgid ":func:`~odoo.api.model`"
msgstr ""

# 738b5d941d7547f89d928377e688df16
#: ../../reference/orm.rst:542
msgid ""
"the method is exposed as not using ids, its recordset will generally be "
"empty. Its \"old API\" signature is ``cr, uid, *arguments, context``::"
msgstr ""

# fa9177f5589245549d358b8e5face326
#: ../../reference/orm.rst:559
msgid ":func:`~odoo.api.multi`"
msgstr ""

# c63380744da14f12ad8e2177ac4b0859
#: ../../reference/orm.rst:552
msgid ""
"the method is exposed as taking a list of ids (possibly empty), its \"old"
" API\" signature is ``cr, uid, ids, *arguments, context``::"
msgstr ""

# 4579d4b236fe4c419acbde84cd607f24
#: ../../reference/orm.rst:561
msgid ""
"Because new-style APIs tend to return recordsets and old-style APIs tend "
"to return lists of ids, there is also a decorator managing this:"
msgstr ""

# c07be377c5d14aa79c5df2e5b0480635
#: ../../reference/orm.rst:580
msgid ":func:`~odoo.api.returns`"
msgstr ""

# 78d83b5e5a7c407ab0ff22230fafe603
#: ../../reference/orm.rst:565
msgid ""
"the function is assumed to return a recordset, the first parameter should"
" be the name of the recordset's model or ``self`` (for the current "
"model)."
msgstr ""

# cbc17e9736f846febbeab87162a4a76d
#: ../../reference/orm.rst:568
msgid ""
"No effect if the method is called in new API style, but transforms the "
"recordset into a list of ids when called from the old API style::"
msgstr ""

# b6f4f0ce327643f1ac56a44b846ebf6f
#: ../../reference/orm.rst:585
msgid "Model Reference"
msgstr ""

# a0552c51b24a47eaa377d3d252d67d70
#: odoo.models.Model:1 of
msgid "Main super-class for regular database-persisted Odoo models."
msgstr ""

# 18c0999363d14474bfcf1921d321beb9
#: odoo.models.Model:3 of
msgid "Odoo models are created by inheriting from this class::"
msgstr ""

# 57f039412be14be1806ae479a660295e
#: odoo.models.Model:8 of
msgid ""
"The system will later instantiate the class once per database (on which "
"the class' module is installed)."
msgstr ""

# 9ff7aaeec018451f85e7ce405d6372c6
#: ../../reference/orm.rst:595
msgid "Structural attributes"
msgstr ""

# 9ae59dac23904eafb96835648cc97f4a
#: ../../reference/orm.rst:598
msgid "business object name, in dot-notation (in module namespace)"
msgstr ""

# f9b44925be384a079e6bfd04c09ad528
#: ../../reference/orm.rst:602
msgid ""
"Alternative field to use as name, used by osv’s name_get() (default: "
"``'name'``)"
msgstr ""

# 8c0effd1cdd04e8790d6c7d1f3f60276
#: ../../reference/orm.rst:607
msgid ""
"If :attr:`._name` is set, names of parent models to inherit from. Can be "
"a ``str`` if inheriting from a single parent"
msgstr ""

# 0bcbb095ff014fc59b7965f0af640087
#: ../../reference/orm.rst:609
msgid "If :attr:`._name` is unset, name of a single model to extend in-place"
msgstr ""

# e408ed5e4bb8475686850bab62b1c094
#: ../../reference/orm.rst:612
msgid "See :ref:`reference/orm/inheritance`."
msgstr ""

# a9b709f1374747e5b9023e50026fbfe8
#: ../../reference/orm.rst:616
msgid ""
"Ordering field when searching without an ordering specified (default: "
"``'id'``)"
msgstr ""

# a4585984290e4cc2b0d2cdd78cf7f0e7
# 871ddfc72a454424a6d83118cc826335
#: ../../reference/orm.rst:619 odoo.fields.Date.context_today:8 of
msgid "str"
msgstr ""

# 6c1e7cb5fa184795892e3e7b66d3fe3a
#: ../../reference/orm.rst:623
msgid "Whether a database table should be created (default: ``True``)"
msgstr ""

# dde8c352fdca4ecaa7b2044c4dd2ed90
#: ../../reference/orm.rst:625
msgid "If set to ``False``, override :meth:`.init` to create the database table"
msgstr ""

# eb074d1e818342a885462346d3519d7f
#: ../../reference/orm.rst:630
msgid ""
"Name of the table backing the model created when "
":attr:`~odoo.models.Model._auto`, automatically generated by default."
msgstr ""

# 3342b22f2d784212b3fdaa16aeb1128b
#: ../../reference/orm.rst:636
msgid ""
"dictionary mapping the _name of the parent business objects to the names "
"of the corresponding foreign key fields to use::"
msgstr ""

# 986070d8daa14793853566a453227795
#: ../../reference/orm.rst:644
msgid ""
"implements composition-based inheritance: the new model exposes all the "
"fields of the :attr:`~odoo.models.Model._inherits`-ed model but stores "
"none of them: the values themselves remain stored on the linked record."
msgstr ""

# 8e4bd18d6e7440edb1be07c2a825d686
#: ../../reference/orm.rst:651
msgid ""
"if the same field is defined on multiple "
":attr:`~odoo.models.Model._inherits`-ed"
msgstr ""

# f4c2011179c64f7ea7ef69474ac9f8aa
#: ../../reference/orm.rst:656
msgid ""
"list of ``(constraint_function, message, fields)`` defining Python "
"constraints. The fields list is indicative"
msgstr ""

# cc9e7cd4eb2a47ba924c5451742e1f71
#: ../../reference/orm.rst:661
msgid "use :func:`~odoo.api.constrains`"
msgstr ""

# 061a44b116c844e18f8cec55cab99fe0
#: ../../reference/orm.rst:665
msgid ""
"list of ``(name, sql_definition, message)`` triples defining SQL "
"constraints to execute when generating the backing table"
msgstr ""

# 5a9d8b9f7e2448368edb98cda1e60f00
#: ../../reference/orm.rst:670
msgid ""
"Alongside :attr:`~.parent_left` and :attr:`~.parent_right`, sets up a "
"`nested set <http://en.wikipedia.org/wiki/Nested_set_model>`_  to enable "
"fast hierarchical queries on the records of the current model (default: "
"``False``)"
msgstr ""

# 9e2b4cf8e8bf401cb6364f0fbbdd59b4
#: ../../reference/orm.rst:675
msgid "bool"
msgstr ""

# 21119c03d33b488895d65b00abdaf863
#: ../../reference/orm.rst:678
msgid "CRUD"
msgstr ""

# 5e31ecf14e8342448dc0ebad7e154d37
#: odoo.models.Model.create:1 of
msgid "Creates a new record for the model."
msgstr ""

# d46385e0cc884c1a8fe58cc99811ff82
#: odoo.models.Model.create:3 of
msgid ""
"The new record is initialized using the values from ``vals`` and if "
"necessary those from :meth:`~.default_get`."
msgstr ""

# 481a4237b0c64eb9abd84d302fc8085a
#: odoo.models.Model.create:6 of
msgid ""
"values for the model's fields, as a dictionary::      {'field_name': "
"field_value, ...}  see :meth:`~.write` for details"
msgstr ""

# 6bd12c5f746f40048a89844880bce3c6
#: odoo.models.Model.create:7 of
msgid "values for the model's fields, as a dictionary::"
msgstr ""

# 8e607cd4a9234424a4b8dbeee48cb424
#: odoo.models.Model.create:11 of
msgid "see :meth:`~.write` for details"
msgstr ""

# 393f19c9f62e4103bccbf417556be370
#: odoo.models.Model.create:12 of
msgid "new record created"
msgstr ""

# 6b60ece0236e4400a8998e6990932de8
#: odoo.models.Model.create:13 of
msgid ""
"* if user has no create rights on the requested object * if user tries to"
" bypass access rules for create on the requested object"
msgstr ""

# 5d35d03b1ba94dd9bd64934b8146adef
#: odoo.models.Model.create:13 of
msgid "if user has no create rights on the requested object"
msgstr ""

# 1da48c6970c14ca6a19852332b346029
#: odoo.models.Model.create:14 of
msgid "if user tries to bypass access rules for create on the requested object"
msgstr ""

# 90e720a3e6054ca299eb77ac8f6def2b
# e9d0e9efabde46379ac829b8ed8de4c4
#: odoo.models.Model.create:15 odoo.models.Model.write:12 of
msgid "if user tries to enter invalid value for a field that is not in selection"
msgstr ""

# 57687ed6c9e24c37a7f93d0226ebf4e6
# c4fc6cfc26014dd89701df1aca80eecd
#: odoo.models.Model.create:16 odoo.models.Model.write:13 of
msgid ""
"if a loop would be created in a hierarchy of objects a result of the "
"operation (such as setting an object as its own parent)"
msgstr ""

# 7a70b8cfc70a4b30baacea44a9c2a5e5
#: odoo.models.Model.browse:1 of
msgid ""
"Returns a recordset for the ids provided as parameter in the current "
"environment."
msgstr ""

# 9d434d4c21f94493ba1a71fe41f6d8f7
#: odoo.models.Model.browse:4 of
msgid "Can take no ids, a single id or a sequence of ids."
msgstr ""

# 9d1d5cecd1394f64b84874bc94606401
#: odoo.models.Model.unlink:1 of
msgid "Deletes the records of the current set"
msgstr ""

# 5300167bbe4e4df78e2ecd87ce8c832d
#: odoo.models.Model.unlink:3 of
msgid ""
"* if user has no unlink rights on the requested object * if user tries to"
" bypass access rules for unlink on the requested object"
msgstr ""

# 9c15d1bde45342b7bf313cae0f25390c
#: odoo.models.Model.unlink:3 of
msgid "if user has no unlink rights on the requested object"
msgstr ""

# e474e5fa91444540b188f9746e728cdf
#: odoo.models.Model.unlink:4 of
msgid "if user tries to bypass access rules for unlink on the requested object"
msgstr ""

# 8d753e38ac7b4fa78cdd944495197b46
#: odoo.models.Model.unlink:5 of
msgid "if the record is default property for other records"
msgstr ""

# c445d6f3befb48d39e91c7fd2de6fb56
#: odoo.models.Model.write:1 of
msgid "Updates all records in the current set with the provided values."
msgstr ""

# 402862ccb4e34c7e9ace242c5c559b9d
#: odoo.models.Model.write:3 of
msgid ""
"fields to update and the value to set on them e.g::      {'foo': 1, "
"'bar': \"Qux\"}  will set the field ``foo`` to ``1`` and the field "
"``bar`` to ``\"Qux\"`` if those are valid (otherwise it will trigger an "
"error)."
msgstr ""

# 995c611f658c4d0782e46657fa1e3858
#: odoo.models.Model.write:3 of
msgid "fields to update and the value to set on them e.g::"
msgstr ""

# a1f5d59722b44873be4502af3de187db
#: odoo.models.Model.write:7 of
msgid ""
"will set the field ``foo`` to ``1`` and the field ``bar`` to ``\"Qux\"`` "
"if those are valid (otherwise it will trigger an error)."
msgstr ""

# 83ab028fc98f41cc9d5c53aa22450259
#: odoo.models.Model.write:10 of
msgid ""
"* if user has no write rights on the requested object * if user tries to "
"bypass access rules for write on the requested object"
msgstr ""

# 37f7f1f8ff6c4b0395b204c6982e7195
#: odoo.models.Model.write:10 of
msgid "if user has no write rights on the requested object"
msgstr ""

# 02030cca3d2a4531aefaf7286c28fe2b
#: odoo.models.Model.write:11 of
msgid "if user tries to bypass access rules for write on the requested object"
msgstr ""

# 0547720514e24946bb68e4a41a1bf81b
#: odoo.models.Model.write:15 of
msgid ""
"For numeric fields (:class:`~odoo.fields.Integer`, "
":class:`~odoo.fields.Float`) the value should be of the corresponding "
"type"
msgstr ""

# 7e1d9941d94e4035b724900cab943f80
#: odoo.models.Model.write:18 of
msgid ""
"For :class:`~odoo.fields.Boolean`, the value should be a "
":class:`python:bool`"
msgstr ""

# c819917a4f094493b537f8cbf7efac9e
#: odoo.models.Model.write:20 of
msgid ""
"For :class:`~odoo.fields.Selection`, the value should match the selection"
" values (generally :class:`python:str`, sometimes :class:`python:int`)"
msgstr ""

# a62a94b62f8c4fd48a8143a982c0937c
#: odoo.models.Model.write:23 of
msgid ""
"For :class:`~odoo.fields.Many2one`, the value should be the database "
"identifier of the record to set"
msgstr ""

# d352da966a484c21966be991c736d625
#: odoo.models.Model.write:25 of
msgid "Other non-relational fields use a string for value"
msgstr ""

# d6e91d8490cd4816b02b0428bec22ecc
#: odoo.models.Model.write:29 of
msgid ""
"for historical and compatibility reasons, :class:`~odoo.fields.Date` and "
":class:`~odoo.fields.Datetime` fields use strings as values (written and "
"read) rather than :class:`~python:datetime.date` or "
":class:`~python:datetime.datetime`. These date strings are UTC-only and "
"formatted according to "
":const:`odoo.tools.misc.DEFAULT_SERVER_DATE_FORMAT` and "
":const:`odoo.tools.misc.DEFAULT_SERVER_DATETIME_FORMAT`"
msgstr ""

# fa139bb629cd4407b66546c9e16a66ca
#: odoo.models.Model.write:39 of
msgid ""
":class:`~odoo.fields.One2many` and :class:`~odoo.fields.Many2many` use a "
"special \"commands\" format to manipulate the set of records stored "
"in/associated with the field."
msgstr ""

# bb341919485b4207a27baec7d0b5059b
#: odoo.models.Model.write:43 of
msgid ""
"This format is a list of triplets executed sequentially, where each "
"triplet is a command to execute on the set of records. Not all commands "
"apply in all situations. Possible commands are:"
msgstr ""

# e46977cc9e0c4f26a8dda810eccbccfe
#: odoo.models.Model.write:47 of
msgid "``(0, _, values)``"
msgstr ""

# d3239b76b6044063b179843355a73868
#: odoo.models.Model.write:48 of
msgid "adds a new record created from the provided ``value`` dict."
msgstr ""

# a9fa9a01974541d4baa7081b434ff184
#: odoo.models.Model.write:50 of
msgid "``(1, id, values)``"
msgstr ""

# 123dad9330d24b80a1e74f54eb6dd286
#: odoo.models.Model.write:50 of
msgid ""
"updates an existing record of id ``id`` with the values in ``values``. "
"Can not be used in :meth:`~.create`."
msgstr ""

# 50c71ef8b18345dba1a1d0e6f7865055
#: odoo.models.Model.write:53 of
msgid "``(2, id, _)``"
msgstr ""

# 249ed08967d8487f8a25e8b39fd5e3ea
#: odoo.models.Model.write:53 of
msgid ""
"removes the record of id ``id`` from the set, then deletes it (from the "
"database). Can not be used in :meth:`~.create`."
msgstr ""

# c06e48738d014e10878e5772805b22de
#: odoo.models.Model.write:58 of
msgid "``(3, id, _)``"
msgstr ""

# 79b68b28170e44789c2adc8ba49977fb
#: odoo.models.Model.write:56 of
msgid ""
"removes the record of id ``id`` from the set, but does not delete it. Can"
" not be used on :class:`~odoo.fields.One2many`. Can not be used in "
":meth:`~.create`."
msgstr ""

# 66b21b7e1c954dceb39ed3b84fd365c4
#: odoo.models.Model.write:61 of
msgid "``(4, id, _)``"
msgstr ""

# 36ce9fba7f8146099353235d582a44de
#: odoo.models.Model.write:61 of
msgid ""
"adds an existing record of id ``id`` to the set. Can not be used on "
":class:`~odoo.fields.One2many`."
msgstr ""

# 50c826ef78cf4182a7b18a842380a88d
#: odoo.models.Model.write:66 of
msgid "``(5, _, _)``"
msgstr ""

# 541d3e579bc84f168c0d482a8fa27ae9
#: odoo.models.Model.write:64 of
msgid ""
"removes all records from the set, equivalent to using the command ``3`` "
"on every record explicitly. Can not be used on "
":class:`~odoo.fields.One2many`. Can not be used in :meth:`~.create`."
msgstr ""

# 5d114d04911c48128737b9e3bb8011f3
#: odoo.models.Model.write:71 of
msgid "``(6, _, ids)``"
msgstr ""

# 2abbfe9859ce4e64b82973c78235aaee
#: odoo.models.Model.write:69 of
msgid ""
"replaces all existing records in the set by the ``ids`` list, equivalent "
"to using the command ``5`` followed by a command ``4`` for each ``id`` in"
" ``ids``."
msgstr ""

# 3718f93079844de1bbc4854331513d0f
#: odoo.models.Model.write:73 of
msgid ""
"Values marked as ``_`` in the list above are ignored and can be anything,"
" generally ``0`` or ``False``."
msgstr ""

# dc6891e0097d487bb2d7646600ed107d
#: odoo.models.Model.read:1 of
msgid ""
"Reads the requested fields for the records in ``self``, low-level/RPC "
"method. In Python code, prefer :meth:`~.browse`."
msgstr ""

# 1b5f7baafe7c46b7972bffa261e150d3
#: odoo.models.Model.read:4 of
msgid "list of field names to return (default is all fields)"
msgstr ""

# f626f81e6a1c4821bb316b058a246c0d
#: odoo.models.Model.read:5 of
msgid ""
"a list of dictionaries mapping field names to their values, with one "
"dictionary per record"
msgstr ""

# 2b0672e5d72a4e008dbf52583e404dc7
#: odoo.models.Model.read:7 of
msgid "if user has no read rights on some of the given records"
msgstr ""

# 2382aef6343a4b6fac1d11fa07bdcfb7
#: odoo.models.Model.read_group:1 of
msgid ""
"Get the list of records in list view grouped by the given ``groupby`` "
"fields"
msgstr ""

# 73bce9ac6a9b4ce0b246ad25a0b36136
#: odoo.models.Model.read_group:3 of
msgid "list specifying search criteria [['field_name', 'operator', 'value'], ...]"
msgstr ""

# b2569d3b11884f0692234a0e9a231ab5
#: odoo.models.Model.read_group:4 of
msgid "list of fields present in the list view specified on the object"
msgstr ""

# 928e6d185b63423eade1ac9a020a85d6
#: odoo.models.Model.read_group:5 of
msgid ""
"list of groupby descriptions by which the records will be grouped.   A "
"groupby description is either a field (then it will be grouped by that "
"field) or a string 'field:groupby_function'.  Right now, the only "
"functions supported are 'day', 'week', 'month', 'quarter' or 'year', and "
"they only make sense for  date/datetime fields."
msgstr ""

# 8db231e88081471fa7392e1497515b79
#: odoo.models.Model.read_group:10 of
msgid "optional number of records to skip"
msgstr ""

# 1147e02a6e1c43309263d53e067d9e71
# 910bf15dcc4044bda22d80b769664eb6
#: odoo.models.Model.name_search:18 odoo.models.Model.read_group:11 of
msgid "optional max number of records to return"
msgstr ""

# f0a89e7bb4964cba926c0725725fd42d
#: odoo.models.Model.read_group:12 of
msgid ""
"optional ``order by`` specification, for overriding the natural sort "
"ordering of the groups, see also :py:meth:`~osv.osv.osv.search` "
"(supported only for many2one fields currently)"
msgstr ""

# d1e02bb5d6bf4e43b7466706a747e73d
#: odoo.models.Model.read_group:16 of
msgid ""
"if true, the results are only grouped by the first groupby and the  "
"remaining groupbys are put in the __context key.  If false, all the "
"groupbys are done in one call."
msgstr ""

# 2f6172a958664b9099e8c92d4a9bae2b
#: odoo.models.Model.read_group:19 of
msgid ""
"list of dictionaries(one dictionary for each record) containing:  * the "
"values of fields grouped by the fields in ``groupby`` argument * "
"__domain: list of tuples specifying the search criteria * __context: "
"dictionary with argument like ``groupby``"
msgstr ""

# fdbd56594ed64f87b8654e6a7bd5af63
#: odoo.models.Model.read_group:19 of
msgid "list of dictionaries(one dictionary for each record) containing:"
msgstr ""

# 2ec5a1021bdf4562abc28528c97c5041
#: odoo.models.Model.read_group:21 of
msgid "the values of fields grouped by the fields in ``groupby`` argument"
msgstr ""

# febfa735ba2843a0b23d34c11747bcf2
#: odoo.models.Model.read_group:22 of
msgid "__domain: list of tuples specifying the search criteria"
msgstr ""

# 988fdca880364f61b1eab4350fe3cea9
#: odoo.models.Model.read_group:23 of
msgid "__context: dictionary with argument like ``groupby``"
msgstr ""

# 5b7301ace8014377bb71e69053ada9c0
#: odoo.models.Model.read_group:24 of
msgid "[{'field_name_1': value, ...]"
msgstr ""

# ffeeaf8caba34ec3badbe0d5581e25d8
#: odoo.models.Model.read_group:25 of
msgid ""
"* if user has no read rights on the requested object * if user tries to "
"bypass access rules for read on the requested object"
msgstr ""

# f8ad9be0d330484893af1b04bc054207
#: odoo.models.Model.read_group:25 of
msgid "if user has no read rights on the requested object"
msgstr ""

# 56af7fed4fd3496daaef4d69bbc5ebff
#: odoo.models.Model.read_group:26 of
msgid "if user tries to bypass access rules for read on the requested object"
msgstr ""

# 509eafa26d364cdc9a659b51cfb6e5f4
#: ../../reference/orm.rst:688
msgid "Searching"
msgstr ""

# cac5c0d6787e4499848ea93f38a5bdf1
#: odoo.models.Model.search:1 of
msgid ""
"Searches for records based on the ``args`` :ref:`search domain "
"<reference/orm/domains>`."
msgstr ""

# bd81fbf3a55c49419f1bdae7b71a4fa2
#: odoo.models.Model.search:4 of
msgid ""
":ref:`A search domain <reference/orm/domains>`. Use an empty list to "
"match all records."
msgstr ""

# b4bb39b2499f44db8d1aa9f508e4788d
#: odoo.models.Model.search:6 of
msgid "number of results to ignore (default: none)"
msgstr ""

# 25b07b3db938450087dded4b484c3673
#: odoo.models.Model.search:7 of
msgid "maximum number of records to return (default: all)"
msgstr ""

# 1b2f8d195e954d8893d58391058b589c
#: odoo.models.Model.search:8 of
msgid "sort string"
msgstr ""

# 30a5477ac82544489448651a45347ad4
#: odoo.models.Model.search:9 of
msgid ""
"if True, only counts and returns the number of matching records (default:"
" False)"
msgstr ""

# ea089680e5db4569a0dcc4e414a51f27
#: odoo.models.Model.search:10 of
msgid "at most ``limit`` records matching the search criteria"
msgstr ""

# 201e7eb1cff543699f7c108e1653154c
#: odoo.models.Model.search:12 of
msgid "* if user tries to bypass access rules for read on the requested object."
msgstr ""

# 0e4e18d9f1e54ddeb5b9ff486ddb43fa
#: odoo.models.Model.search:12 of
msgid "if user tries to bypass access rules for read on the requested object."
msgstr ""

# 0489f68d565a42b6ac4d871deb623fbd
#: odoo.models.Model.search_count:1 of
msgid ""
"Returns the number of records in the current model matching :ref:`the "
"provided domain <reference/orm/domains>`."
msgstr ""

# 04914f3ec0274a15b18528913742b823
#: odoo.models.Model.name_search:1 of
msgid ""
"Search for records that have a display name matching the given ``name`` "
"pattern when compared with the given ``operator``, while also matching "
"the optional search domain (``args``)."
msgstr ""

# 9d7714b6d4104699a0d840db19f7e9d5
#: odoo.models.Model.name_search:5 of
msgid ""
"This is used for example to provide suggestions based on a partial value "
"for a relational field. Sometimes be seen as the inverse function of "
":meth:`~.name_get`, but it is not guaranteed to be."
msgstr ""

# 937b5f7128d94bc0bdfc3c200f0d6e5a
#: odoo.models.Model.name_search:9 of
msgid ""
"This method is equivalent to calling :meth:`~.search` with a search "
"domain based on ``display_name`` and then :meth:`~.name_get` on the "
"result of the search."
msgstr ""

# 4905a40bdc3049649182e531697dba6c
#: odoo.models.Model.name_search:13 of
msgid "the name pattern to match"
msgstr ""

# 5d03e78ea0d84da8a385e9ba435c6bba
#: odoo.models.Model.name_search:14 of
msgid ""
"optional search domain (see :meth:`~.search` for syntax), specifying "
"further restrictions"
msgstr ""

# 8d5941024b3040759d743d9ffcfaf6d5
#: odoo.models.Model.name_search:16 of
msgid "domain operator for matching ``name``, such as ``'like'`` or ``'='``."
msgstr ""

# 0ff34465d8ec455d9704e9e71798556e
#: odoo.models.Model.name_search:19 of
msgid "list"
msgstr ""

# 8eea5cba76c84726b5f14832e8a8bb9d
#: odoo.models.Model.name_search:20 of
msgid "list of pairs ``(id, text_repr)`` for all matching records."
msgstr ""

# 84938387926940cd93f1a2892ff1a259
#: ../../reference/orm.rst:694
msgid "Recordset operations"
msgstr ""

# f7b6d364cf8e44e9b09d068542f0a715
#: odoo.models.Model.ids:1 of
msgid ""
"List of actual record ids in this recordset (ignores placeholder ids for "
"records to create)"
msgstr ""

# 914a9307265b4330a412c54c552400ae
#: odoo.models.Model.ensure_one:1 of
msgid ""
"Verifies that the current recorset holds a single record. Raises an "
"exception otherwise."
msgstr ""

# 8810d26d93114d9e9c89a02f25600904
#: odoo.models.Model.exists:1 of
msgid ""
"Returns the subset of records in ``self`` that exist, and marks deleted "
"records as such in cache. It can be used as a test on records::"
msgstr ""

# c9d64da2c70a4ff5a6581991975b6493
#: odoo.models.Model.exists:7 of
msgid "By convention, new records are returned as existing."
msgstr ""

# 776e4cda97804f35bc4eefb235fd51ca
#: odoo.models.Model.filtered:1 of
msgid ""
"Select the records in ``self`` such that ``func(rec)`` is true, and "
"return them as a recordset."
msgstr ""

# d91fa7a945f04db48542202e58eb727c
#: odoo.models.Model.filtered:4 of
msgid "a function or a dot-separated sequence of field names"
msgstr ""

# 51324eb58e05491a8ecc2155fe090129
#: odoo.models.Model.sorted:1 of
msgid "Return the recordset ``self`` ordered by ``key``."
msgstr ""

# 1e365c76468e4370904608e925e6528c
#: odoo.models.Model.sorted:3 of
msgid ""
"either a function of one argument that returns a comparison key for each "
"record, or a field name, or ``None``, in which case records are ordered "
"according the default model's order"
msgstr ""

# 24d706daacd140119b2950b6fe2b2dfd
#: odoo.models.Model.sorted:7 of
msgid "if ``True``, return the result in reverse order"
msgstr ""

# c316624e057342c1947e60d9a97a8d6b
#: odoo.models.Model.mapped:1 of
msgid ""
"Apply ``func`` on all records in ``self``, and return the result as a "
"list or a recordset (if ``func`` return recordsets). In the latter case, "
"the order of the returned recordset is arbitrary."
msgstr ""

# 4e9278a082da41cb9bd873b5fd572782
#: odoo.models.Model.mapped:5 of
msgid ""
"a function or a dot-separated sequence of field names (string); any falsy"
" value simply returns the recordset ``self``"
msgstr ""

# 0282dd92d101458895db415c6c0553d7
#: ../../reference/orm.rst:703
msgid "Environment swapping"
msgstr ""

# c436ce435116453fb24d3330bf5197ec
#: odoo.models.Model.sudo:1 of
msgid "Returns a new version of this recordset attached to the provided user."
msgstr ""

# 1371e4a4c111443694bd820a1cc9a5a3
#: odoo.models.Model.sudo:4 of
msgid ""
"By default this returns a ``SUPERUSER`` recordset, where access control "
"and record rules are bypassed."
msgstr ""

# 27f0a3e6231e4e47a3372c50ded01f5f
#: odoo.models.Model.sudo:9 of
msgid ""
"Using ``sudo`` could cause data access to cross the boundaries of record "
"rules, possibly mixing records that are meant to be isolated (e.g. "
"records from different companies in multi-company environments)."
msgstr ""

# 0165e0bc3cf644e68bf30ed87c3d5b99
#: odoo.models.Model.sudo:14 of
msgid ""
"It may lead to un-intuitive results in methods which select one record "
"among many - for example getting the default company, or selecting a Bill"
" of Materials."
msgstr ""

# eead1ccf45db431993de13befab876f2
#: odoo.models.Model.sudo:20 of
msgid ""
"Because the record rules and access control will have to be re-evaluated,"
" the new recordset will not benefit from the current environment's data "
"cache, so later data access may incur extra delays while re-fetching from"
" the database. The returned recordset has the same prefetch object as "
"``self``."
msgstr ""

# ba97ff5bfd3c408cb7b6366d52a3fee5
#: odoo.models.Model.with_context:1 of
msgid "Returns a new version of this recordset attached to an extended context."
msgstr ""

# dec581c7251d4f4f9dab6a33899fbb4b
#: odoo.models.Model.with_context:4 of
msgid ""
"The extended context is either the provided ``context`` in which "
"``overrides`` are merged or the *current* context in which ``overrides`` "
"are merged e.g.::"
msgstr ""

# 1f6b4ba881954ee588705b05ddf486ed
#: odoo.models.Model.with_env:1 of
msgid ""
"Returns a new version of this recordset attached to the provided "
"environment"
msgstr ""

# 095499e99eff40cba6b2af74a6427fc2
#: odoo.models.Model.with_env:5 of
msgid ""
"The new environment will not benefit from the current environment's data "
"cache, so later data access may incur extra delays while re-fetching from"
" the database. The returned recordset has the same prefetch object as "
"``self``."
msgstr ""

# 6f9091f51bdb4a5ca01f370b46e0b91b
#: ../../reference/orm.rst:709
msgid "Fields and views querying"
msgstr ""

# f516eaa7baf74ed29da7ac3053246899
#: odoo.models.Model.fields_get:1 of
msgid "Return the definition of each field."
msgstr ""

# e107cb793a274cd988d3b22a597a0a02
#: odoo.models.Model.fields_get:3 of
msgid ""
"The returned value is a dictionary (indiced by field name) of "
"dictionaries. The _inherits'd fields are included. The string, help, and "
"selection (if present) attributes are translated."
msgstr ""

# 97587971ebb24a9f81da90cb1bac9f52
#: odoo.models.Model.fields_get:7 of
msgid "list of fields to document, all if empty or not provided"
msgstr ""

# 53887258d74948608216f2ba472e8c2c
#: odoo.models.Model.fields_get:8 of
msgid ""
"list of description attributes to return for each field, all if empty or "
"not provided"
msgstr ""

# 9ae8de589b814551a33aaf08b379dec3
#: odoo.models.Model.fields_view_get:1 of
msgid ""
"Get the detailed composition of the requested view like fields, model, "
"view architecture"
msgstr ""

# 1d124a97ca7e4d88891f69a36b3a1ed5
#: odoo.models.Model.fields_view_get:3 of
msgid "id of the view or None"
msgstr ""

# e2ac99521acc45ca8ccb753bdc587446
#: odoo.models.Model.fields_view_get:4 of
msgid "type of the view to return if view_id is None ('form', 'tree', ...)"
msgstr ""

# 812b8b1dc98c48819a2adb84b3ecb555
#: odoo.models.Model.fields_view_get:5 of
msgid "true to include contextual actions"
msgstr ""

# 167cf420f95843a38346c6d9e74a8203
#: odoo.models.Model.fields_view_get:6 of
msgid "deprecated"
msgstr ""

# 8c3d66be37e9451a9d2024666fede927
#: odoo.models.Model.fields_view_get:7 of
msgid ""
"dictionary describing the composition of the requested view (including "
"inherited views and extensions)"
msgstr ""

# 92c430cd7cef40b9bd9408860dcab805
#: odoo.models.Model.fields_view_get:8 of
msgid ""
"* if the inherited view has unknown position to work with other than "
"'before', 'after', 'inside', 'replace' * if some tag other than "
"'position' is found in parent view"
msgstr ""

# c03bd6f2a0824ce89fa4a2964af7cdb3
#: odoo.models.Model.fields_view_get:9 of
msgid ""
"if the inherited view has unknown position to work with other than "
"'before', 'after', 'inside', 'replace'"
msgstr ""

# 54fbe7d684d24b94abfe33759781e741
#: odoo.models.Model.fields_view_get:10 of
msgid "if some tag other than 'position' is found in parent view"
msgstr ""

# a7fb52b81cbe4a08b3101a6b0e171843
#: odoo.models.Model.fields_view_get:11 of
msgid ""
"if there is view type other than form, tree, calendar, search etc defined"
" on the structure"
msgstr ""

# 2d03b309c82d426e90461011a78b984e
#: ../../reference/orm.rst:714
msgid "Miscellaneous methods"
msgstr ""

# 6bb27403896346a9be1d29096ce9dc93
#: odoo.models.Model.default_get:1 of
msgid ""
"Return default values for the fields in ``fields_list``. Default values "
"are determined by the context, user defaults, and the model itself."
msgstr ""

# 74f40fcae8fe488a8f2409a460d46bc1
#: odoo.models.Model.default_get:5 of
msgid "a list of field names"
msgstr ""

# 8ed4e9a8f8b348e4a386892a03e46098
#: odoo.models.Model.default_get:6 of
msgid ""
"a dictionary mapping each field name to its corresponding default value, "
"if it has one."
msgstr ""

# 4570251190774bb4bb8fbf277a61c78e
#: odoo.models.Model.copy:1 of
msgid "Duplicate record ``self`` updating it with default values"
msgstr ""

# 158e9140e207455cb6ef4d793e381b59
#: odoo.models.Model.copy:3 of
msgid ""
"dictionary of field values to override in the original values of the "
"copied record, e.g: ``{'field_name': overridden_value, ...}``"
msgstr ""

# d50b54d9bc074eca918a8bc20b00f9e8
#: odoo.models.Model.copy:5 of
msgid "new record"
msgstr ""

# ddde2daf50744836929031f69ee79f23
#: odoo.models.Model.name_get:1 of
msgid ""
"Returns a textual representation for the records in ``self``. By default "
"this is the value of the ``display_name`` field."
msgstr ""

# 74da62dc54a3404b8cac42d5e175e03d
#: odoo.models.Model.name_get:4 of
msgid "list of pairs ``(id, text_repr)`` for each records"
msgstr ""

# 2f302af411634911acb3299c4a07da91
#: odoo.models.Model.name_get:5 of
msgid "list(tuple)"
msgstr ""

# a8a843b4c9bd43b194567fe530f3fa8a
#: odoo.models.Model.name_create:1 of
msgid ""
"Create a new record by calling :meth:`~.create` with only one value "
"provided: the display name of the new record."
msgstr ""

# d4fa5859bf1348f39ab6f1f57fc467a5
#: odoo.models.Model.name_create:4 of
msgid ""
"The new record will be initialized with any default values applicable to "
"this model, or provided through the context. The usual behavior of "
":meth:`~.create` applies."
msgstr ""

# e6e6deca515c42158913ac46666a3764
#: odoo.models.Model.name_create:8 of
msgid "display name of the record to create"
msgstr ""

# ed0b9348b2644b8fa59bbfd0361b7704
#: odoo.models.Model.name_create:9 of
msgid "tuple"
msgstr ""

# 9f29683f054846ba993ebdffbeae280e
#: odoo.models.Model.name_create:10 of
msgid "the :meth:`~.name_get` pair value of the created record"
msgstr ""

# 1e5b10ad19c348a682d392bdbecc791b
#: ../../reference/orm.rst:723
msgid "Automatic fields"
msgstr ""

# 0eb28945a5c646a0b85db825e8b0bb1a
#: ../../reference/orm.rst:726
msgid "Identifier :class:`field <odoo.fields.Field>`"
msgstr ""

# d1fbd4823df046e78412a95cff2ef275
#: ../../reference/orm.rst:730
msgid ""
"Whether log access fields (``create_date``, ``write_uid``, ...) should be"
" generated (default: ``True``)"
msgstr ""

# 44da85b797bc4b21bc899885f4cc8580
#: ../../reference/orm.rst:735
msgid "Date at which the record was created"
msgstr ""

# 0ef06cfff3a04ca0b5ed1576155b504c
# a6b57d14742e411283b14eb8893fb75d
#: ../../reference/orm.rst:737 ../../reference/orm.rst:749
msgid ":class:`~odoo.field.Datetime`"
msgstr ""

# 34a3228e0507459fb03c82eae2954707
#: ../../reference/orm.rst:741
msgid "Relational field to the user who created the record"
msgstr ""

# 51e443f73650426895edeb81f14e660c
# f90a96c6468447d1ad7db532e7e0e442
#: ../../reference/orm.rst:743 ../../reference/orm.rst:755
msgid "``res.users``"
msgstr ""

# c7ecdfcdab7e442eba7d001cf8539859
#: ../../reference/orm.rst:747
msgid "Date at which the record was last modified"
msgstr ""

# 3cf4620580b84958bddf784693b1488b
#: ../../reference/orm.rst:753
msgid "Relational field to the last user who modified the record"
msgstr ""

# da4ce4a34dc343818465adb37317eb1f
#: ../../reference/orm.rst:758
msgid "Reserved field names"
msgstr ""

# 4a760f67259144238096a9e6f445ca53
#: ../../reference/orm.rst:759
msgid ""
"A few field names are reserved for pre-defined behaviors beyond that of "
"automated fields. They should be defined on a model when the related "
"behavior is desired:"
msgstr ""

# 16f5e66ff2744282bce32c2d06a505fd
#: ../../reference/orm.rst:765
msgid ""
"default value for :attr:`~._rec_name`, used to display records in context"
" where a representative \"naming\" is necessary."
msgstr ""

# efa5226399fd4e8d91306849d51037dc
#: ../../reference/orm.rst:769
msgid ":class:`~odoo.fields.Char`"
msgstr ""

# 4ab692acc7d849a4857cc84f8ddd844e
#: ../../reference/orm.rst:773
msgid ""
"toggles the global visibility of the record, if ``active`` is set to "
"``False`` the record is invisible in most searches and listing"
msgstr ""

# eb604d6d83044e3c8c5f07de5527d1bf
#: ../../reference/orm.rst:776
msgid ":class:`~odoo.fields.Boolean`"
msgstr ""

# 2339a19649424e24a17ee222844cc8de
#: ../../reference/orm.rst:780
msgid ""
"Alterable ordering criteria, allows drag-and-drop reordering of models in"
" list views"
msgstr ""

# b507fc16588241379b5e3df3c8fc5671
#: ../../reference/orm.rst:783
msgid ":class:`~odoo.fields.Integer`"
msgstr ""

# 437892d15209473eb32619b211fdd686
#: ../../reference/orm.rst:787
msgid ""
"lifecycle stages of the object, used by the ``states`` attribute on "
":class:`fields <odoo.fields.Field>`"
msgstr ""

# d4ef534e221e4747bd516a569313288e
#: ../../reference/orm.rst:790
msgid ":class:`~odoo.fields.Selection`"
msgstr ""

# 768f0b5c90c04673aab714b325c5d786
#: ../../reference/orm.rst:794
msgid ""
"used to order records in a tree structure and enables the ``child_of`` "
"operator in domains"
msgstr ""

# 5f563429384d448382358d72d1e8d985
#: ../../reference/orm.rst:797
msgid ":class:`~odoo.fields.Many2one`"
msgstr ""

# 2dc03a3be8cc4318a3da72fee1e9efd3
#: ../../reference/orm.rst:801
msgid "used with :attr:`~._parent_store`, allows faster tree structure access"
msgstr ""

# 13043a5c717d46bc83eaee937bd8e872
#: ../../reference/orm.rst:805
msgid "see :attr:`~.parent_left`"
msgstr ""

# 97387468efc3418cb9318ac0c0ea4aed
#: ../../reference/orm.rst:810
msgid "Method decorators"
msgstr ""

# 67055d1ac00146ad86f457b01e1c5e1f
#: odoo.api:1 of
msgid ""
"This module provides the elements for managing two different API styles, "
"namely the \"traditional\" and \"record\" styles."
msgstr ""

# c8abd5fc716340c4875b6493485249d2
#: odoo.api:4 of
msgid ""
"In the \"traditional\" style, parameters like the database cursor, user "
"id, context dictionary and record ids (usually denoted as ``cr``, "
"``uid``, ``context``, ``ids``) are passed explicitly to all methods. In "
"the \"record\" style, those parameters are hidden into model instances, "
"which gives it a more object-oriented feel."
msgstr ""

# a85297d5950e4507baee9860a8f84b34
#: odoo.api:10 of
msgid "For instance, the statements::"
msgstr ""

# f32d2d86bcf14e2abbfa05986ebccc8f
#: odoo.api:18 of
msgid "may also be written as::"
msgstr ""

# 379ddfc8db5b4f4ba3ca31b9dc42350f
#: odoo.api:27 of
msgid ""
"Methods written in the \"traditional\" style are automatically decorated,"
" following some heuristics based on parameter names."
msgstr ""

# da7984b9f1d8412e8824a5adb6600c04
#: odoo.api.multi:1 of
msgid ""
"Decorate a record-style method where ``self`` is a recordset. The method "
"typically defines an operation on records. Such a method::"
msgstr ""

# 7a67d5d59b7f4f87a14c2b6631e27636
# cc342fb22bb7492887e7a74865c557ee
# fbf1fd12796c44529619266b41637c0c
#: odoo.api.model:8 odoo.api.multi:8 odoo.api.one:11 of
msgid "may be called in both record and traditional styles, like::"
msgstr ""

# 28410668ac254071bc0b83c3c079a05f
#: odoo.api.model:1 of
msgid ""
"Decorate a record-style method where ``self`` is a recordset, but its "
"contents is not relevant, only the model is. Such a method::"
msgstr ""

# 53d492ca3eba48c39dc3388926b0c141
#: odoo.api.model:15 of
msgid "Notice that no ``ids`` are passed to the method in the traditional style."
msgstr ""

# 1c8bf67a564f4b3c892b530275813129
#: odoo.api.depends:1 of
msgid ""
"Return a decorator that specifies the field dependencies of a \"compute\""
" method (for new-style function fields). Each argument must be a string "
"that consists in a dot-separated sequence of field names::"
msgstr ""

# cd696124172f497cab5b6aac96520af8
#: odoo.api.depends:15 of
msgid ""
"One may also pass a single function as argument. In that case, the "
"dependencies are given by calling the function with the field's model."
msgstr ""

# 056922b9a4314fde8eb81ec1ae4e47a6
#: odoo.api.constrains:1 of
msgid ""
"Decorates a constraint checker. Each argument must be a field name used "
"in the check::"
msgstr ""

# 984b3a3d00804aba81ba420bb2dcde88
#: odoo.api.constrains:10 of
msgid "Invoked on the records on which one of the named fields has been modified."
msgstr ""

# 02dde679f9644aa89557aa67a03f0ef1
#: odoo.api.constrains:12 of
msgid ""
"Should raise :class:`~odoo.exceptions.ValidationError` if the validation "
"failed."
msgstr ""

# 8037b5ad3e7d428eb55387420cae5607
#: odoo.api.constrains:17 of
msgid ""
"``@constrains`` only supports simple field names, dotted names (fields of"
" relational fields e.g. ``partner_id.customer``) are not supported and "
"will be ignored"
msgstr ""

# 34b55eb86a5c41299de0ae16742ff9db
#: odoo.api.onchange:1 of
msgid ""
"Return a decorator to decorate an onchange method for given fields. Each "
"argument must be a field name::"
msgstr ""

# ab414f3d07914243b51b1420f40a4ab7
#: odoo.api.onchange:8 of
msgid ""
"In the form views where the field appears, the method will be called when"
" one of the given fields is modified. The method is invoked on a pseudo-"
"record that contains the values present in the form. Field assignments on"
" that record are automatically sent back to the client."
msgstr ""

# 4eaf7ff934744915a87d5b2d2737a4d8
#: odoo.api.onchange:13 of
msgid ""
"The method may return a dictionary for changing field domains and pop up "
"a warning message, like in the old API::"
msgstr ""

# b24ca7519e074e3ab2de7f06bd5c5500
#: odoo.api.onchange:24 of
msgid ""
"``@onchange`` only supports simple field names, dotted names (fields of "
"relational fields e.g. ``partner_id.tz``) are not supported and will be "
"ignored"
msgstr ""

# 11b1684c56e14cc28f0cc1d208704c08
#: odoo.api.returns:1 of
msgid "Return a decorator for methods that return instances of ``model``."
msgstr ""

# db1aa89ca4804a4bb47fea5a9b3eb2f3
#: odoo.api.returns:3 of
msgid "a model name, or ``'self'`` for the current model"
msgstr ""

# b6c5a6c83d9e4f87a84837ae6c46bc5e
#: odoo.api.returns:5 of
msgid ""
"a function ``downgrade(self, value, *args, **kwargs)`` to convert the "
"record-style ``value`` to a traditional-style output"
msgstr ""

# e87b7a137a77472bb2f0d43ffbdbab56
#: odoo.api.returns:8 of
msgid ""
"a function ``upgrade(self, value, *args, **kwargs)`` to convert the "
"traditional-style ``value`` to a record-style output"
msgstr ""

# 22cd922fce25443faf5f39946be40f33
#: odoo.api.returns:11 of
msgid ""
"The arguments ``self``, ``*args`` and ``**kwargs`` are the ones passed to"
" the method in the record-style."
msgstr ""

# 0a5d2e52ab8248f8b174201158f8460c
#: odoo.api.returns:14 of
msgid ""
"The decorator adapts the method output to the api style: ``id``, ``ids`` "
"or ``False`` for the traditional style, and recordset for the record "
"style::"
msgstr ""

# b25ab672ac384335a17547b68a37870c
#: odoo.api.returns:28 of
msgid "Note that the decorated method must satisfy that convention."
msgstr ""

# afe2359c11c7403186f8f9ee9de7487b
#: odoo.api.returns:30 of
msgid ""
"Those decorators are automatically *inherited*: a method that overrides a"
" decorated existing method will be decorated with the same "
"``@returns(model)``."
msgstr ""

# 8eba2c54b19e476a9f185425320c845c
#: odoo.api.one:1 of
msgid ""
"Decorate a record-style method where ``self`` is expected to be a "
"singleton instance. The decorated method automatically loops on records, "
"and makes a list with the results. In case the method is decorated with "
":func:`returns`, it concatenates the resulting instances. Such a method::"
msgstr ""

# d6f306a4e08a406ebbb5ffbc51f86fb0
#: odoo.api.one:20 of
msgid ""
":func:`~.one` often makes the code less clear and behaves in ways "
"developers and readers may not expect."
msgstr ""

# 596d6d638df54aef978441495d7812e8
#: odoo.api.one:23 of
msgid ""
"It is strongly recommended to use :func:`~.multi` and either iterate on "
"the ``self`` recordset or ensure that the recordset is a single record "
"with :meth:`~odoo.models.Model.ensure_one`."
msgstr ""

# e9f3c92fcdbc4a259de42807859a3242
#: odoo.api.v7:1 of
msgid ""
"Decorate a method that supports the old-style api only. A new-style api "
"may be provided by redefining a method with the same name and decorated "
"with :func:`~.v8`::"
msgstr ""

# ed99b65534f0480eba44bca55c146037
#: odoo.api.v7:13 of
msgid ""
"Special care must be taken if one method calls the other one, because the"
" method may be overridden! In that case, one should call the method from "
"the current class (say ``MyClass``), for instance::"
msgstr ""

# 9763cb31da504dfcbef04a1ac8c39aae
# 0a0f5c67411b4606b90be22533cea3b0
#: odoo.api.v7:23 odoo.api.v8:13 of
msgid "Note that the wrapper method uses the docstring of the first method."
msgstr ""

# 260f65f6ae1d4267a545b37e74690a77
#: odoo.api.v8:1 of
msgid ""
"Decorate a method that supports the new-style api only. An old-style api "
"may be provided by redefining a method with the same name and decorated "
"with :func:`~.v7`::"
msgstr ""

# 8ad5001491f14ed4bdd04f36bd4a60de
#: ../../reference/orm.rst:819
msgid "Fields"
msgstr ""

# 874a4c50cef24e639f7fd261d64f6c7e
#: ../../reference/orm.rst:824
msgid "Basic fields"
msgstr ""

# 1b3ba0c654ea4bca917621e296845c75
#: odoo.fields.Field:1 of
msgid ""
"The field descriptor contains the field definition, and manages accesses "
"and assignments of the corresponding field on records. The following "
"attributes may be provided when instanciating a field:"
msgstr ""

# 3f3d1ad33866410abef110a3b58ac06e
#: odoo.fields.Field:5 of
msgid ""
"the label of the field seen by users (string); if not set, the ORM takes "
"the field name in the class (capitalized)."
msgstr ""

# dcad886e817f4fcd9d49782c1b3b3be6
#: odoo.fields.Field:8 of
msgid "the tooltip of the field seen by users (string)"
msgstr ""

# 7780673482d747dfb4fd8018b9d3d39f
#: odoo.fields.Field:10 of
msgid "whether the field is readonly (boolean, by default ``False``)"
msgstr ""

# b59d2fefcbe44759aba6fe4c2f16e4dc
#: odoo.fields.Field:12 of
msgid "whether the value of the field is required (boolean, by default ``False``)"
msgstr ""

# 9887ea9044ff418cb6d1942375e2562e
#: odoo.fields.Field:15 of
msgid "whether the field is indexed in database (boolean, by default ``False``)"
msgstr ""

# 3971bc2bbab4481aab73c3487703d167
#: odoo.fields.Field:18 of
msgid ""
"the default value for the field; this is either a static value, or a "
"function taking a recordset and returning a value; use ``default=None`` "
"to discard default values for the field"
msgstr ""

# f1c9435820ae4798a6c44c884cef65f7
#: odoo.fields.Field:22 of
msgid ""
"a dictionary mapping state values to lists of UI attribute-value pairs; "
"possible attributes are: 'readonly', 'required', 'invisible'. Note: Any "
"state-based condition requires the ``state`` field value to be available "
"on the client-side UI. This is typically done by including it in the "
"relevant views, possibly made invisible if not relevant for the end-user."
msgstr ""

# 10dbd96ff4f44150a35e891fbf1aa7bd
#: odoo.fields.Field:29 of
msgid ""
"comma-separated list of group xml ids (string); this restricts the field "
"access to the users of the given groups only"
msgstr ""

# 1b91fc5646714ed7a2541dea7d3d697e
#: odoo.fields.Field:32 of
msgid ""
"whether the field value should be copied when the record is duplicated "
"(default: ``True`` for normal fields, ``False`` for ``one2many`` and "
"computed fields, including property fields and related fields)"
msgstr ""

# 03f7386433734b938e7a358e94a389a4
#: odoo.fields.Field:37 of
msgid ""
"the previous name of this field, so that ORM can rename it automatically "
"at migration"
msgstr ""

# a7e0c7e82b3c402d81f2799732090370
#: odoo.fields.Field:44 of
msgid ""
"One can define a field whose value is computed instead of simply being "
"read from the database. The attributes that are specific to computed "
"fields are given below. To define such a field, simply provide a value "
"for the attribute ``compute``."
msgstr ""

# 2a6a6871bd2941209d70d9efad0f6f39
#: odoo.fields.Field:49 of
msgid "name of a method that computes the field"
msgstr ""

# 572491e95abe4c1482a57552dc064f83
#: odoo.fields.Field:51 of
msgid "name of a method that inverses the field (optional)"
msgstr ""

# 4c65c3a63f084bb9b8b2656df2da8010
#: odoo.fields.Field:53 of
msgid "name of a method that implement search on the field (optional)"
msgstr ""

# fd375b9908b9491f89b36a5aee0cb3b0
#: odoo.fields.Field:55 of
msgid ""
"whether the field is stored in database (boolean, by default ``False`` on"
" computed fields)"
msgstr ""

# a8f2b32e738545fe9b29224524b7b41e
#: odoo.fields.Field:58 of
msgid ""
"whether the field should be recomputed as superuser to bypass access "
"rights (boolean, by default ``False``)"
msgstr ""

# fa7f3416ac3d48f3827a1614d958ea6d
#: odoo.fields.Field:61 of
msgid ""
"The methods given for ``compute``, ``inverse`` and ``search`` are model "
"methods. Their signature is shown in the following example::"
msgstr ""

# cff2e00472fc47b9a6106fa221135fdc
#: odoo.fields.Field:82 of
msgid ""
"The compute method has to assign the field on all records of the invoked "
"recordset. The decorator :meth:`odoo.api.depends` must be applied on the "
"compute method to specify the field dependencies; those dependencies are "
"used to determine when to recompute the field; recomputation is automatic"
" and guarantees cache/database consistency. Note that the same method can"
" be used for several fields, you simply have to assign all the given "
"fields in the method; the method will be invoked once for all those "
"fields."
msgstr ""

# d36a65d00d8b4197a50256a1e140a4ab
#: odoo.fields.Field:91 of
msgid ""
"By default, a computed field is not stored to the database, and is "
"computed on-the-fly. Adding the attribute ``store=True`` will store the "
"field's values in the database. The advantage of a stored field is that "
"searching on that field is done by the database itself. The disadvantage "
"is that it requires database updates when the field must be recomputed."
msgstr ""

# 3d2d2539bbdd48fd905db18cd22c9681
#: odoo.fields.Field:97 of
msgid ""
"The inverse method, as its name says, does the inverse of the compute "
"method: the invoked records have a value for the field, and you must "
"apply the necessary changes on the field dependencies such that the "
"computation gives the expected value. Note that a computed field without "
"an inverse method is readonly by default."
msgstr ""

# 95a2dc87af4a49d1bcaf5a67a8beac92
#: odoo.fields.Field:103 of
msgid ""
"The search method is invoked when processing domains before doing an "
"actual search on the model. It must return a domain equivalent to the "
"condition: ``field operator value``."
msgstr ""

# f40a585a420d4f0c9b379adecd0dce81
#: odoo.fields.Field:111 of
msgid ""
"The value of a related field is given by following a sequence of "
"relational fields and reading a field on the reached model. The complete "
"sequence of fields to traverse is specified by the attribute"
msgstr ""

# 61fe3b51368c4c61b3abaa08751d7e70
#: odoo.fields.Field:115 of
msgid "sequence of field names"
msgstr ""

# abe1875cd69647a79c14ec9e00dbada6
#: odoo.fields.Field:117 of
msgid ""
"Some field attributes are automatically copied from the source field if "
"they are not redefined: ``string``, ``help``, ``readonly``, ``required`` "
"(only if all fields in the sequence are required), ``groups``, "
"``digits``, ``size``, ``translate``, ``sanitize``, ``selection``, "
"``comodel_name``, ``domain``, ``context``. All semantic-free attributes "
"are copied from the source field."
msgstr ""

# b432fc8d0fa24f08a55d93f767ab405c
#: odoo.fields.Field:124 of
msgid ""
"By default, the values of related fields are not stored to the database. "
"Add the attribute ``store=True`` to make it stored, just like computed "
"fields. Related fields are automatically recomputed when their "
"dependencies are modified."
msgstr ""

# 06431e0ea3904576a1150b79713d8eda
#: odoo.fields.Field:132 of
msgid "Company-dependent fields"
msgstr ""

# 54713d60d5684267adca04166b89a3c4
#: odoo.fields.Field:133 of
msgid ""
"Formerly known as 'property' fields, the value of those fields depends on"
" the company. In other words, users that belong to different companies "
"may see different values for the field on a given record."
msgstr ""

# 09a3c021c99843d194ac614432186b9d
#: odoo.fields.Field:137 of
msgid "whether the field is company-dependent (boolean)"
msgstr ""

# 9862a13888ca45e5a31a3af883a8d97b
#: odoo.fields.Field:142 of
msgid "Sparse fields"
msgstr ""

# 695b15cdc5b046c99862473c2cf42716
#: odoo.fields.Field:143 of
msgid ""
"Sparse fields have a very small probability of being not null. Therefore "
"many such fields can be serialized compactly into a common location, the "
"latter being a so-called \"serialized\" field."
msgstr ""

# a11a7542566e47339348f8c73910426e
#: odoo.fields.Field:147 of
msgid "the name of the field where the value of this field must be stored."
msgstr ""

# 9b8aef9b0d9b4ef3ad759232eaccd23e
#: odoo.fields.Field:153 of
msgid "Incremental definition"
msgstr ""

# bc8d87de3b374073ac0f475b7ccef0a0
#: odoo.fields.Field:154 of
msgid ""
"A field is defined as class attribute on a model class. If the model is "
"extended (see :class:`~odoo.models.Model`), one can also extend the field"
" definition by redefining a field with the same name and same type on the"
" subclass. In that case, the attributes of the field are taken from the "
"parent class and overridden by the ones given in subclasses."
msgstr ""

# 0e9775679e8d48acae67643ac82792a3
#: odoo.fields.Field:161 of
msgid ""
"For instance, the second class below only adds a tooltip on the field "
"``state``::"
msgstr ""

# 01cc5df9674045638a4a9f81b7f86d0b
# 21429112d9cd421e93472b36d57e1f03
# 816f9656bccd4eb8bde3be145203c242
#: ../../<autodoc>:1
msgid "Bases: :class:`odoo.fields._String`"
msgstr ""

# 0707e4f499b94aec92ce7b4e4eb6067c
#: odoo.fields.Char:1 of
msgid ""
"Basic string field, can be length-limited, usually displayed as a single-"
"line string in clients."
msgstr ""

# 427dd6c42a6c4399a93d5b10ff55d687
#: odoo.fields.Char:4 of
msgid "the maximum size of values stored for that field"
msgstr ""

# 12f6466f6ac2451090e94bf253f053f8
# 350f6d84cdc54e0999339f6a5061d22b
#: odoo.fields.Char:6 odoo.fields.Text:4 of
msgid ""
"enable the translation of the field's values; use ``translate=True`` to "
"translate field values as a whole; ``translate`` may also be a callable "
"such that ``translate(callback, value)`` translates ``value`` by using "
"``callback(term)`` to retrieve the translation of terms."
msgstr ""

# 3a4fe2d70746448f8a069cf35ad0521d
# 2b312a59079245c3a93056830a67228a
# 37c250c1d2bf43a38433803f41230950
# 8b6b5805682f4d449e22071b39414e40
# 756a752a7b3645abb781111404a33afc
# 399e61e925e041ea8387076f45cfb1f2
#: ../../<autodoc>:1
msgid "Bases: :class:`odoo.fields.Field`"
msgstr ""

# ba754e94fc10495984a40184e9dc862e
#: odoo.fields.Float:1 of
msgid "The precision digits are given by the attribute"
msgstr ""

# ce88e02b1aea4be78027bdb0d56b2e03
#: odoo.fields.Float:3 of
msgid ""
"a pair (total, decimal), or a function taking a database cursor and "
"returning a pair (total, decimal)"
msgstr ""

# 87d828cf3e2849c4a2f28fb5a4a7b3a6
#: odoo.fields.Text:1 of
msgid ""
"Very similar to :class:`~.Char` but used for longer contents, does not "
"have a size and usually displayed as a multiline text box."
msgstr ""

# d9f644483d6b4b2996e100dac2f3c3d7
#: odoo.fields.Selection:1 of
msgid ""
"specifies the possible values for this field. It is given as either a "
"list of pairs (``value``, ``string``), or a model method, or a method "
"name."
msgstr ""

# 07751f6900dd497590fcc579189525e5
#: odoo.fields.Selection:4 of
msgid ""
"provides an extension of the selection in the case of an overridden "
"field. It is a list of pairs (``value``, ``string``)."
msgstr ""

# af5f403ec9874bd3a7ebaee2300c189c
#: odoo.fields.Selection:7 of
msgid ""
"The attribute ``selection`` is mandatory except in the case of "
":ref:`related fields <field-related>` or :ref:`field extensions <field-"
"incremental-definition>`."
msgstr ""

# e857cc6d17704ee6946f2e27fdbec802
#: odoo.fields.Date.context_today:1 of
msgid ""
"Return the current date as seen in the client's timezone in a format fit "
"for date fields. This method may be used to compute default values."
msgstr ""

# f5369117a6f34787b9843c7a7f153a3f
#: odoo.fields.Date.context_today:5 of
msgid ""
"optional datetime value to use instead of the current date and time (must"
" be a datetime, regular dates can't be converted between timezones.)"
msgstr ""

# 71bc6ef1025545a1911a1b109b3dda41
#: odoo.fields.Date.from_string:1 of
msgid "Convert an ORM ``value`` into a :class:`date` value."
msgstr ""

# 24f0a52f27fc4542b486820221011125
#: odoo.fields.Date.to_string:1 of
msgid "Convert a :class:`date` value into the format expected by the ORM."
msgstr ""

# 44d78cb21f7a4764b5fa44b5b07531af
#: odoo.fields.Date.today:1 of
msgid ""
"Return the current day in the format expected by the ORM. This function "
"may be used to compute default values."
msgstr ""

# 14e5fdba80bd4f73be1ff5215849a692
#: odoo.fields.Datetime.context_timestamp:1 of
msgid ""
"Returns the given timestamp converted to the client's timezone. This "
"method is *not* meant for use as a default initializer, because datetime "
"fields are automatically converted upon display on client side. For "
"default values :meth:`fields.datetime.now` should be used instead."
msgstr ""

# c94229eb48b64d89b1c0710d2983dd22
#: odoo.fields.Datetime.context_timestamp:7 of
msgid ""
"naive datetime value (expressed in UTC) to be converted to the client "
"timezone"
msgstr ""

# 716a9da477774821a9ca1b6d1cd32053
#: odoo.fields.Datetime.context_timestamp:9 of
msgid "datetime"
msgstr ""

# 4218465b75414d5faf80a88beed5c285
#: odoo.fields.Datetime.context_timestamp:10 of
msgid "timestamp converted to timezone-aware datetime in context timezone"
msgstr ""

# 4ec4e458d1db421e9b8d2ef196953272
#: odoo.fields.Datetime.from_string:1 of
msgid "Convert an ORM ``value`` into a :class:`datetime` value."
msgstr ""

# 89b69d9675e049d6b9c312e87ca9309e
#: odoo.fields.Datetime.now:1 of
msgid ""
"Return the current day and time in the format expected by the ORM. This "
"function may be used to compute default values."
msgstr ""

# b13b55ea736f48809f1711a8887d7724
#: odoo.fields.Datetime.to_string:1 of
msgid "Convert a :class:`datetime` value into the format expected by the ORM."
msgstr ""

# 2a514c34cf1b49b9aadb25215ae8d5ba
#: ../../reference/orm.rst:866
msgid "Relational fields"
msgstr ""

# fb99a10402bd48619fd6a6cd74b5264f
#: ../../<autodoc>:1
msgid "Bases: :class:`odoo.fields._Relational`"
msgstr ""

# 81314e835f154d88b8d1aba633a14df6
#: odoo.fields.Many2one:1 of
msgid ""
"The value of such a field is a recordset of size 0 (no record) or 1 (a "
"single record)."
msgstr ""

# 63c3b89ba0224a3dbbc7e8d3e3564944
# df1a87ac18c748038905d026fc99c00f
# e0e423a0ab854b059884e702e2e34f1d
#: odoo.fields.Many2many:3 odoo.fields.Many2one:4 odoo.fields.One2many:5 of
msgid "name of the target model (string)"
msgstr ""

# b854385c2a454272b41a8f6a51c05d0d
# 70104ff44a2447e18b85276ed7fce8be
# 9251e3aa446c40228c5316b17364a546
#: odoo.fields.Many2many:21 odoo.fields.Many2one:6 odoo.fields.One2many:10 of
msgid ""
"an optional domain to set on candidate values on the client side (domain "
"or string)"
msgstr ""

# f389613ccd3e4a72a0c231c1d71d18b6
# f453bcce0c924c68a44ff9215ab5a696
# 3670fd7534a74d338c093eaaa1443f75
#: odoo.fields.Many2many:24 odoo.fields.Many2one:9 odoo.fields.One2many:13 of
msgid ""
"an optional context to use on the client side when handling that field "
"(dictionary)"
msgstr ""

# 9f3f046abc154cdb8d2c40a5a1fd444c
#: odoo.fields.Many2one:12 of
msgid ""
"what to do when the referred record is deleted; possible values are: "
"``'set null'``, ``'restrict'``, ``'cascade'``"
msgstr ""

# 6ee62d1565ec4b5a84b3db4be1681fb8
# a0c95673debf4415a4b812f3eaadc304
#: odoo.fields.Many2one:15 odoo.fields.One2many:16 of
msgid ""
"whether JOINs are generated upon search through that field (boolean, by "
"default ``False``)"
msgstr ""

# e8e202d680084eb69e7105055105a4fa
#: odoo.fields.Many2one:18 of
msgid ""
"set it to ``True`` to make fields of the target model accessible from the"
" current model (corresponds to ``_inherits``)"
msgstr ""

# 9d2c95cbe4b347dfb5b51da80582d587
# d63344e671f64dbb813c960b575dd488
#: odoo.fields.Many2many:5 odoo.fields.Many2one:21 of
msgid ""
"The attribute ``comodel_name`` is mandatory except in the case of related"
" fields or field extensions."
msgstr ""

# da91f32758aa464d86d23d1efb992730
# f9f3c74ff0fb4a6688bfa09cd55c4300
#: ../../<autodoc>:1
msgid "Bases: :class:`odoo.fields._RelationalMulti`"
msgstr ""

# 4787507f200f4288817912123d2e5060
#: odoo.fields.One2many:1 of
msgid ""
"One2many field; the value of such a field is the recordset of all the "
"records in ``comodel_name`` such that the field ``inverse_name`` is equal"
" to the current record."
msgstr ""

# 482fe0cb04094b96902717a08daf6c4b
#: odoo.fields.One2many:7 of
msgid "name of the inverse ``Many2one`` field in ``comodel_name`` (string)"
msgstr ""

# a6aaf45f301d4e44aea55ea091c38762
# 9e1c50cb8ffa42459ec644bdbf3fef52
#: odoo.fields.Many2many:27 odoo.fields.One2many:19 of
msgid "optional limit to use upon read (integer)"
msgstr ""

# fdb300128ba84c2dbd485c3170f5e67b
#: odoo.fields.One2many:21 of
msgid ""
"The attributes ``comodel_name`` and ``inverse_name`` are mandatory except"
" in the case of related fields or field extensions."
msgstr ""

# 129153b8a92f4c7c91e466ec6d3592c7
#: odoo.fields.Many2many:1 of
msgid "Many2many field; the value of such a field is the recordset."
msgstr ""

# 0eb0b2cb9bdb46b0affe6e1c8ff51fee
#: odoo.fields.Many2many:8 of
msgid ""
"optional name of the table that stores the relation in the database "
"(string)"
msgstr ""

# 6a6d121396a34c269541f283974ff6bf
#: odoo.fields.Many2many:11 of
msgid ""
"optional name of the column referring to \"these\" records in the table "
"``relation`` (string)"
msgstr ""

# c94ab21565b641fc85069483ce768e01
#: odoo.fields.Many2many:14 of
msgid ""
"optional name of the column referring to \"those\" records in the table "
"``relation`` (string)"
msgstr ""

# 58d81a6480244a218cf16fd87954a4ad
#: odoo.fields.Many2many:17 of
msgid ""
"The attributes ``relation``, ``column1`` and ``column2`` are optional. If"
" not given, names are automatically generated from model names, provided "
"``model_name`` and ``comodel_name`` are different!"
msgstr ""

# e8c1023ab8b94848b6b59a9a9af3d990
#: ../../<autodoc>:1
msgid "Bases: :class:`odoo.fields.Selection`"
msgstr ""

# 5e6e3cff06b84f5ea37563b559e0623b
#: ../../reference/orm.rst:883
msgid "Inheritance and extension"
msgstr ""

# eceb567f6e7f491b99fe9d5c9fbe2bd0
#: ../../reference/orm.rst:885
msgid ""
"Odoo provides three different mechanisms to extend models in a modular "
"way:"
msgstr ""

# 296a7df31a9d4cad9172b3f0ad0b5457
#: ../../reference/orm.rst:887
msgid ""
"creating a new model from an existing one, adding new information to the "
"copy but leaving the original module as-is"
msgstr ""

# fa23c7575e6242d9a7f2a67fd73175c1
#: ../../reference/orm.rst:889
msgid ""
"extending models defined in other modules in-place, replacing the "
"previous version"
msgstr ""

# e0d9ff54c7f04d5390dd176957ce459d
#: ../../reference/orm.rst:891
msgid "delegating some of the model's fields to records it contains"
msgstr ""

# e992b2883918434caa5782636a2f86ee
#: ../../reference/orm.rst:897
msgid "Classical inheritance"
msgstr ""

# d9938dc6e14b4d838360701af30ecb6d
#: ../../reference/orm.rst:899
msgid ""
"When using the :attr:`~odoo.models.Model._inherit` and "
":attr:`~odoo.models.Model._name` attributes together, Odoo creates a new "
"model using the existing one (provided via "
":attr:`~odoo.models.Model._inherit`) as a base. The new model gets all "
"the fields, methods and meta-information (defaults & al) from its base."
msgstr ""

# d08b3fe74cd44c8b8ced0df140e551c1
#: ../../reference/orm.rst:909
msgid "and using them:"
msgstr ""

# 54c1710657f64296808c579e12ad7265
# 12b0605d3ed446528c4eb4da280ecf8e
#: ../../reference/orm.rst:915 ../../reference/orm.rst:942
msgid "will yield:"
msgstr ""

# 69caecf2f9df425fa9594e0c259c80db
#: ../../reference/orm.rst:921
msgid ""
"the second model has inherited from the first model's ``check`` method "
"and its ``name`` field, but overridden the ``call`` method, as when using"
" standard :ref:`Python inheritance <python:tut-inheritance>`."
msgstr ""

# baf70ad2b8d24446aa29eb60a86c11f0
#: ../../reference/orm.rst:926
msgid "Extension"
msgstr ""

# 4158e46940e74e3980b7c8d5919dd7b1
#: ../../reference/orm.rst:928
msgid ""
"When using :attr:`~odoo.models.Model._inherit` but leaving out "
":attr:`~odoo.models.Model._name`, the new model replaces the existing "
"one, essentially extending it in-place. This is useful to add new fields "
"or methods to existing models (created in other modules), or to customize"
" or reconfigure them (e.g. to change their default sort order):"
msgstr ""

# acfcfdd793794b5b9894d0263e618716
#: ../../reference/orm.rst:948
msgid ""
"it will also yield the various :ref:`automatic fields "
"<reference/orm/model/automatic>` unless they've been disabled"
msgstr ""

# 26c7b02abb3f444b9f18265bdd639fc2
#: ../../reference/orm.rst:952
msgid "Delegation"
msgstr ""

# 4a38d8a2df084a1898e4f3bcb5243e35
#: ../../reference/orm.rst:954
msgid ""
"The third inheritance mechanism provides more flexibility (it can be "
"altered at runtime) but less power: using the "
":attr:`~odoo.models.Model._inherits` a model *delegates* the lookup of "
"any field not found on the current model to \"children\" models. The "
"delegation is performed via :class:`~odoo.fields.Reference` fields "
"automatically set up on the parent model:"
msgstr ""

# b227a903a444476fb07408ea25adc1a4
#: ../../reference/orm.rst:969
msgid "will result in:"
msgstr ""

# 0f46744fd94d4fc2bb32cf0d284673a4
#: ../../reference/orm.rst:975
msgid "and it's possible to write directly on the delegated field:"
msgstr ""

# 496809ea9d444f8aba78264efed247d3
#: ../../reference/orm.rst:981
msgid ""
"when using delegation inheritance, methods are *not* inherited, only "
"fields"
msgstr ""

# 33d79fec6313423ab7b84f523650c3d4
#: ../../reference/orm.rst:987
msgid "Domains"
msgstr ""

# e0d781f8fba84219b902b16504150ce4
#: ../../reference/orm.rst:989
msgid ""
"A domain is a list of criteria, each criterion being a triple (either a "
"``list`` or a ``tuple``) of ``(field_name, operator, value)`` where:"
msgstr ""

# 908cc6c74bd94df095157490627b7fbd
#: ../../reference/orm.rst:994
msgid "``field_name`` (``str``)"
msgstr ""

# 337cd81883a14bc18d4a76e426780469
#: ../../reference/orm.rst:993
msgid ""
"a field name of the current model, or a relationship traversal through a "
":class:`~odoo.fields.Many2one` using dot-notation e.g. ``'street'`` or "
"``'partner_id.country'``"
msgstr ""

# 9176fee1aa1e42edb9f306f98671c96b
#: ../../reference/orm.rst:1040
msgid "``operator`` (``str``)"
msgstr ""

# 986bc8a60a8c4b72b8f5048ba950f0c3
#: ../../reference/orm.rst:997
msgid ""
"an operator used to compare the ``field_name`` with the ``value``. Valid "
"operators are:"
msgstr ""

# 5c6b8e9b6a344333af7eaa40bd4d1d87
#: ../../reference/orm.rst:1000
msgid "``=``"
msgstr ""

# 9afaf67e3b6744d98122fcd98466fdc0
#: ../../reference/orm.rst:1001
msgid "equals to"
msgstr ""

# 7e01c431c2744bf5b9a3f2146f634214
#: ../../reference/orm.rst:1002
msgid "``!=``"
msgstr ""

# 11d9ef242c3e4e1aba47439d6dd654fd
#: ../../reference/orm.rst:1003
msgid "not equals to"
msgstr ""

# 5d817cc3ac95419baab1c60c500b2e04
#: ../../reference/orm.rst:1004
msgid "``>``"
msgstr ""

# 2a8b468e26824e618497cd1e2741b4f1
#: ../../reference/orm.rst:1005
msgid "greater than"
msgstr ""

# 03b0f8ee07c14cf3bf2db2392d055bec
#: ../../reference/orm.rst:1006
msgid "``>=``"
msgstr ""

# 276eb7b35a0e4a80abac67e0c312b8e0
#: ../../reference/orm.rst:1007
msgid "greater than or equal to"
msgstr ""

# a5efa02b840246d39b7239df114d25ac
#: ../../reference/orm.rst:1008
msgid "``<``"
msgstr ""

# 3b9a9ed0954d47eaa4671b4026fcc094
#: ../../reference/orm.rst:1009
msgid "less than"
msgstr ""

# ee152fe9408a44e1863b8ab684a5d200
#: ../../reference/orm.rst:1010
msgid "``<=``"
msgstr ""

# 2c58f704213c4bb6a2bcd43ff038bcea
#: ../../reference/orm.rst:1011
msgid "less than or equal to"
msgstr ""

# 3c94bfa56c7e47f880a7da455ce2ac8d
#: ../../reference/orm.rst:1013
msgid "``=?``"
msgstr ""

# 3e4489d454f941fab2737884fb2a017c
#: ../../reference/orm.rst:1013
msgid ""
"unset or equals to (returns true if ``value`` is either ``None`` or "
"``False``, otherwise behaves like ``=``)"
msgstr ""

# 74a57d3583a547558cf4aeea35259294
#: ../../reference/orm.rst:1017
msgid "``=like``"
msgstr ""

# d5d3285f7f294e60af9ae518d07d4a03
#: ../../reference/orm.rst:1016
msgid ""
"matches ``field_name`` against the ``value`` pattern. An underscore ``_``"
" in the pattern stands for (matches) any single character; a percent sign"
" ``%`` matches any string of zero or more characters."
msgstr ""

# e91f50c3e0054dd2b329469821a7e87e
#: ../../reference/orm.rst:1020
msgid "``like``"
msgstr ""

# 3ac47ba635054f6c9d431ac2dc93e811
#: ../../reference/orm.rst:1020
msgid ""
"matches ``field_name`` against the ``%value%`` pattern. Similar to "
"``=like`` but wraps ``value`` with '%' before matching"
msgstr ""

# 00e7b22dc6c54efda636eaf3b07f72f2
#: ../../reference/orm.rst:1022
msgid "``not like``"
msgstr ""

# e0e34e84c18a41d4a68d38d8d8649f65
#: ../../reference/orm.rst:1023
msgid "doesn't match against the ``%value%`` pattern"
msgstr ""

# c555ffce960b4f4199286252d4437e2b
#: ../../reference/orm.rst:1024
msgid "``ilike``"
msgstr ""

# 3b0dbb16432d41dcbd8f20ca7bf19fdc
#: ../../reference/orm.rst:1025
msgid "case insensitive ``like``"
msgstr ""

# a77e33d056c24450a63df5624a6db75d
#: ../../reference/orm.rst:1026
msgid "``not ilike``"
msgstr ""

# f08e6d9488514d3fb8f22fa5287cfa04
#: ../../reference/orm.rst:1027
msgid "case insensitive ``not like``"
msgstr ""

# eaf3205ca5c04586a2ffb187678ab92c
#: ../../reference/orm.rst:1028
msgid "``=ilike``"
msgstr ""

# 5a3e5298da8c41df89b7d205f543d845
#: ../../reference/orm.rst:1029
msgid "case insensitive ``=like``"
msgstr ""

# 35b57c4678f04c1ea4ef97791e2aeb85
#: ../../reference/orm.rst:1031
msgid "``in``"
msgstr ""

# b6dc18d47ccc4d6694f733bae563c3ec
#: ../../reference/orm.rst:1031
msgid ""
"is equal to any of the items from ``value``, ``value`` should be a list "
"of items"
msgstr ""

# 3f7f29252ddf4a50936f26995199d2f9
#: ../../reference/orm.rst:1033
msgid "``not in``"
msgstr ""

# 523cf0b3e8f745c7835f909ced15df14
#: ../../reference/orm.rst:1034
msgid "is unequal to all of the items from ``value``"
msgstr ""

# 2f4e133011174a73b748a06f2c212205
#: ../../reference/orm.rst:1040
msgid "``child_of``"
msgstr ""

# b32eecbfe08d404cb24282dc5ed1c1fc
#: ../../reference/orm.rst:1036
msgid "is a child (descendant) of a ``value`` record."
msgstr ""

# 1ad699cbd59c4cc5ae2b36bf45d692c6
#: ../../reference/orm.rst:1038
msgid ""
"Takes the semantics of the model into account (i.e following the "
"relationship field named by :attr:`~odoo.models.Model._parent_name`)."
msgstr ""

# 14a41428f9f346068d867fe64897a7e6
#: ../../reference/orm.rst:1044
msgid "``value``"
msgstr ""

# 0fd5a515af7b49cfb07501d88a4d3433
#: ../../reference/orm.rst:1043
msgid ""
"variable type, must be comparable (through ``operator``) to the named "
"field"
msgstr ""

# 628f534aa69d4c12b757d56be53e0cb5
#: ../../reference/orm.rst:1046
msgid "Domain criteria can be combined using logical operators in *prefix* form:"
msgstr ""

# 563fa0d6b43945b5b5a5aa0fee81f0b3
#: ../../reference/orm.rst:1049
msgid "``'&'``"
msgstr ""

# 2d608746b1934e5ba7575fa0fda4f40a
#: ../../reference/orm.rst:1049
msgid ""
"logical *AND*, default operation to combine criteria following one "
"another. Arity 2 (uses the next 2 criteria or combinations)."
msgstr ""

# 8f2b3694fcef43a7a39f957c1ada740e
#: ../../reference/orm.rst:1051
msgid "``'|'``"
msgstr ""

# 04842ec9f64d4ba6adf5aee419ea3823
#: ../../reference/orm.rst:1052
msgid "logical *OR*, arity 2."
msgstr ""

# 4ad16bf29a9d4aba8419cc7309f5e351
#: ../../reference/orm.rst:1060
msgid "``'!'``"
msgstr ""

# 8dc3a4b702f24b518d55a1b46148055a
#: ../../reference/orm.rst:1054
msgid "logical *NOT*, arity 1."
msgstr ""

# 2ef7bdc6b7624be5a9d62830b0411133
#: ../../reference/orm.rst:1056
msgid "Mostly to negate combinations of criteria"
msgstr ""

# bb3d6f1bbf7f4cd6a20d8b1a396189ec
#: ../../reference/orm.rst:1059
msgid ""
"Individual criterion generally have a negative form (e.g. ``=`` -> "
"``!=``, ``<`` -> ``>=``) which is simpler than negating the positive."
msgstr ""

# a78dcdbbb68a404cb1671ef3bc48224c
#: ../../reference/orm.rst:1062
msgid "Example"
msgstr ""

# 01a59b1002db4da3967e142aa0dfbb58
#: ../../reference/orm.rst:1064
msgid ""
"To search for partners named *ABC*, from belgium or germany, whose "
"language is not english::"
msgstr ""

# c01ff3ec852944e0839022a7bd295ba8
#: ../../reference/orm.rst:1072
msgid "This domain is interpreted as:"
msgstr ""

# cc888bc88e884952aeec5c3b8e68bc05
#: ../../reference/orm.rst:1081
msgid "Porting from the old API to the new API"
msgstr ""

# a48da421e4504bb3ade44254d450c166
#: ../../reference/orm.rst:1083
msgid "bare lists of ids are to be avoided in the new API, use recordsets instead"
msgstr ""

# d75b1daeea45488798af0980f4ab079e
#: ../../reference/orm.rst:1084
msgid ""
"methods still written in the old API should be automatically bridged by "
"the ORM, no need to switch to the old API, just call them as if they were"
" a new API method. See :ref:`reference/orm/oldapi/bridging` for more "
"details."
msgstr ""

# 39f0d1ed02c5497bb12515861f8e85bc
#: ../../reference/orm.rst:1087
msgid ""
":meth:`~odoo.models.Model.search` returns a recordset, no point in e.g. "
"browsing its result"
msgstr ""

# 6a36956018b2429c8ca5de670df9dd08
#: ../../reference/orm.rst:1089
msgid ""
"``fields.related`` and ``fields.function`` are replaced by using a normal"
" field type with either a ``related=`` or a ``compute=`` parameter"
msgstr ""

# 8a387ce82d994580a0d9e30fcbe7f433
#: ../../reference/orm.rst:1091
msgid ""
":func:`~odoo.api.depends` on ``compute=`` methods **must be complete**, "
"it must list **all** the fields and sub-fields which the compute method "
"uses. It is better to have too many dependencies (will recompute the "
"field in cases where that is not needed) than not enough (will forget to "
"recompute the field and then values will be incorrect)"
msgstr ""

# b1ae6f06d3fa4673ae86ab0d0159fd0e
#: ../../reference/orm.rst:1096
msgid ""
"**remove** all ``onchange`` methods on computed fields. Computed fields "
"are automatically re-computed when one of their dependencies is changed, "
"and that is used to auto-generate ``onchange`` by the client"
msgstr ""

# b8a91b1898b241f995ac6d665fa2b802
#: ../../reference/orm.rst:1099
msgid ""
"the decorators :func:`~odoo.api.model` and :func:`~odoo.api.multi` are "
"for bridging *when calling from the old API context*, for internal or "
"pure new-api (e.g. compute) they are useless"
msgstr ""

# c11d4c372a5c47a9b2bd023a917fd342
#: ../../reference/orm.rst:1102
msgid ""
"remove :attr:`~odoo.models.Model._default`, replace by ``default=`` "
"parameter on corresponding fields"
msgstr ""

# a5a2242b0f1f4ee7902eb628f165307a
#: ../../reference/orm.rst:1104
msgid "if a field's ``string=`` is the titlecased version of the field name::"
msgstr ""

# e71c6a87e65647f1bd733cffa6ae3f5b
#: ../../reference/orm.rst:1108
msgid "it is useless and should be removed"
msgstr ""

# 755e7aae11b6400890b053d0a21321fc
#: ../../reference/orm.rst:1109
msgid ""
"the ``multi=`` parameter does not do anything on new API fields use the "
"same ``compute=`` methods on all relevant fields for the same result"
msgstr ""

# 72820f237ea445299f0879207ddc2d6c
#: ../../reference/orm.rst:1111
msgid ""
"provide ``compute=``, ``inverse=`` and ``search=`` methods by name (as a "
"string), this makes them overridable (removes the need for an "
"intermediate \"trampoline\" function)"
msgstr ""

# 4dcc2326f1d44370a899e300d052b5ca
#: ../../reference/orm.rst:1114
msgid ""
"double check that all fields and methods have different names, there is "
"no warning in case of collision (because Python handles it before Odoo "
"sees anything)"
msgstr ""

# f8d9be7bf9a54b16b0f081af84e3322f
#: ../../reference/orm.rst:1117
msgid ""
"the normal new-api import is ``from odoo import fields, models``. If "
"compatibility decorators are necessary, use ``from odoo import api, "
"fields, models``"
msgstr ""

# 5c8d3378f7a7481b9498ea9b0bc45679
#: ../../reference/orm.rst:1120
msgid ""
"avoid the :func:`~odoo.api.one` decorator, it probably does not do what "
"you expect"
msgstr ""

# 9717fc16a460408b92f353f9f53c8314
#: ../../reference/orm.rst:1122
msgid ""
"remove explicit definition of :attr:`~odoo.models.Model.create_uid`, "
":attr:`~odoo.models.Model.create_date`, "
":attr:`~odoo.models.Model.write_uid` and "
":attr:`~odoo.models.Model.write_date` fields: they are now created as "
"regular \"legitimate\" fields, and can be read and written like any other"
" field out-of-the-box"
msgstr ""

# 959f6b1497bc42348c23f6cf82578d01
#: ../../reference/orm.rst:1128
msgid ""
"when straight conversion is impossible (semantics can not be bridged) or "
"the \"old API\" version is not desirable and could be improved for the "
"new API, it is possible to use completely different \"old API\" and \"new"
" API\" implementations for the same method name using "
":func:`~odoo.api.v7` and :func:`~odoo.api.v8`. The method should first be"
" defined using the old-API style and decorated with :func:`~odoo.api.v7`,"
" it should then be re-defined using the exact same name but the new-API "
"style and decorated with :func:`~odoo.api.v8`. Calls from an old-API "
"context will be dispatched to the first implementation and calls from a "
"new-API context will be dispatched to the second implementation. One "
"implementation can call (and frequently does) call the other by switching"
" context."
msgstr ""

# 11ca18402e924f5dbc73623c05e5b8b9
#: ../../reference/orm.rst:1140
msgid ""
"using these decorators makes methods extremely difficult to override and "
"harder to understand and document"
msgstr ""

# 5d3fd94fb28147e5a6c4c98733083c9d
#: ../../reference/orm.rst:1142
msgid ""
"uses of :attr:`~odoo.models.Model._columns` or "
":attr:`~odoo.models.Model._all_columns` should be replaced by "
":attr:`~odoo.models.Model._fields`, which provides access to instances of"
" new-style :class:`odoo.fields.Field` instances (rather than old-style "
":class:`odoo.osv.fields._column`)."
msgstr ""

# 695c9bab9dda4aee82088c4caa81dbd5
#: ../../reference/orm.rst:1148
msgid ""
"Non-stored computed fields created using the new API style are *not* "
"available in :attr:`~odoo.models.Model._columns` and can only be "
"inspected through :attr:`~odoo.models.Model._fields`"
msgstr ""

# ec21a58dd5aa4ff5aa6c395700d85515
#: ../../reference/orm.rst:1151
msgid ""
"reassigning ``self`` in a method is probably unnecessary and may break "
"translation introspection"
msgstr ""

# 270fc413ac4141abaad1ded20b94682a
#: ../../reference/orm.rst:1153
msgid ""
":class:`~odoo.api.Environment` objects rely on some threadlocal state, "
"which has to be set up before using them. It is necessary to do so using "
"the :meth:`odoo.api.Environment.manage` context manager when trying to "
"use the new API in contexts where it hasn't been set up yet, such as new "
"threads or a Python interactive environment::"
msgstr ""

# 825005a7da4b46c2971d66daa36ad115
#: ../../reference/orm.rst:1175
msgid "Automatic bridging of old API methods"
msgstr ""

# 45c11f9a591d4c0cadb77196e54500e5
#: ../../reference/orm.rst:1177
msgid ""
"When models are initialized, all methods are automatically scanned and "
"bridged if they look like models declared in the old API style. This "
"bridging makes them transparently callable from new-API-style methods."
msgstr ""

# ac01ca132173459eb4e65867e8020897
#: ../../reference/orm.rst:1181
msgid ""
"Methods are matched as \"old-API style\" if their second positional "
"parameter (after ``self``) is called either ``cr`` or ``cursor``. The "
"system also recognizes the third positional parameter being called "
"``uid`` or ``user`` and the fourth being called ``id`` or ``ids``. It "
"also recognizes the presence of any parameter called ``context``."
msgstr ""

# ae8f0ea44a58420d8c6a773c70c2e0e9
#: ../../reference/orm.rst:1187
msgid ""
"When calling such methods from a new API context, the system will "
"automatically fill matched parameters from the current "
":class:`~odoo.api.Environment` (for :attr:`~odoo.api.Environment.cr`, "
":attr:`~odoo.api.Environment.user` and "
":attr:`~odoo.api.Environment.context`) or the current recordset (for "
"``id`` and ``ids``)."
msgstr ""

# a6b08807490d4489bedceb7a201ea455
#: ../../reference/orm.rst:1194
msgid ""
"In the rare cases where it is necessary, the bridging can be customized "
"by decorating the old-style method:"
msgstr ""

# e388afe60574479fa4bea4044cfbe871
#: ../../reference/orm.rst:1197
msgid ""
"disabling it entirely, by decorating a method with "
":func:`~odoo.api.noguess` there will be no bridging and methods will be "
"called the exact same way from the new and old API styles"
msgstr ""

# 686021dca8274ef38e14e2a30837f7c1
#: ../../reference/orm.rst:1200
msgid ""
"defining the bridge explicitly, this is mostly for methods which are "
"matched incorrectly (because parameters are named in unexpected ways):"
msgstr ""

# d93237901bd74c318b2eed00e2e4969b
#: ../../reference/orm.rst:1204
msgid ":func:`~odoo.api.cr`"
msgstr ""

# 7890febf090746dba5b76c049bb0b750
#: ../../reference/orm.rst:1204
msgid ""
"will automatically prepend the current cursor to explicitly provided "
"parameters, positionally"
msgstr ""

# ffffa89147794ed8b60f3ecf2f58865f
#: ../../reference/orm.rst:1207
msgid ":func:`~odoo.api.cr_uid`"
msgstr ""

# 526f1130d7774cb7a46679f864e71bf7
#: ../../reference/orm.rst:1207
msgid ""
"will automatically prepend the current cursor and user's id to explictly "
"provided parameters"
msgstr ""

# f5d07e952acf4dcebd6d7410a2bdf181
#: ../../reference/orm.rst:1210
msgid ":func:`~odoo.api.cr_uid_ids`"
msgstr ""

# a407f9716cf94bba8076d0b53073957d
#: ../../reference/orm.rst:1210
msgid ""
"will automatically prepend the current cursor, user's id and recordset's "
"ids to explicitly provided parameters"
msgstr ""

# 9ebcd7437e264441bee8d577a81e75c3
#: ../../reference/orm.rst:1218
msgid ":func:`~odoo.api.cr_uid_id`"
msgstr ""

# b831a9374eb043bcae8a8e3ce80200e7
#: ../../reference/orm.rst:1213
msgid ""
"will loop over the current recordset and call the method once for each "
"record, prepending the current cursor, user's id and record's id to "
"explicitly provided parameters."
msgstr ""

# 3e6d2ede6b4c48fabf634e2716e2b531
#: ../../reference/orm.rst:1217
msgid ""
"the result of this wrapper is *always a list* when calling from a new-API"
" context"
msgstr ""

# 28601d04df724eaa9d49cae1d7d9e161
#: ../../reference/orm.rst:1220
msgid ""
"All of these methods have a ``_context``-suffixed version (e.g. "
":func:`~odoo.api.cr_uid_context`) which also passes the current context "
"*by keyword*."
msgstr ""

# a8374e909f2c4fb28889ee0d6540ebf5
#: ../../reference/orm.rst:1223
msgid ""
"dual implementations using :func:`~odoo.api.v7` and :func:`~odoo.api.v8` "
"will be ignored as they provide their own \"bridging\""
msgstr ""

#~ msgid ""
#~ "Accessing a relational field "
#~ "(:class:`~openerp.fields.Many2one`, "
#~ ":class:`~openerp.fields.One2many`, "
#~ ":class:`~openerp.fields.Many2many`) *always* returns "
#~ "a recordset, empty if the field is"
#~ " not set."
#~ msgstr ""

#~ msgid ""
#~ "each assignment to a field triggers "
#~ "a database update, when setting multiple"
#~ " fields at the same time or "
#~ "setting fields on multiple records (to"
#~ " the same value), use "
#~ ":meth:`~openerp.models.Model.write`::"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.filtered`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.sorted`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.mapped`"
#~ msgstr ""

#~ msgid ""
#~ "The :class:`~openerp.api.Environment` stores various"
#~ " contextual data used by the ORM: "
#~ "the database cursor (for database "
#~ "queries), the current user (for access"
#~ " rights checking) and the current "
#~ "context (storing arbitrary metadata). The "
#~ "environment also stores caches."
#~ msgstr ""

#~ msgid ""
#~ "All recordsets have an environment, "
#~ "which is immutable, can be accessed "
#~ "using :attr:`~openerp.models.Model.env` and gives"
#~ " access to the current user "
#~ "(:attr:`~openerp.api.Environment.user`), the cursor "
#~ "(:attr:`~openerp.api.Environment.cr`) or the context"
#~ " (:attr:`~openerp.api.Environment.context`)::"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.sudo`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.with_context`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.with_env`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.search`"
#~ msgstr ""

#~ msgid ""
#~ "to just check if any record "
#~ "matches a domain, or count the "
#~ "number of records which do, use "
#~ ":meth:`~openerp.models.Model.search_count`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.create`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.write`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.browse`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.exists`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.api.Environment.ref`"
#~ msgstr ""

#~ msgid ":meth:`~openerp.models.Model.ensure_one`"
#~ msgstr ""

#~ msgid ""
#~ "Fields can be computed (instead of "
#~ "read straight from the database) using"
#~ " the ``compute`` parameter. **It must "
#~ "assign the computed value to the "
#~ "field**. If it uses the values of"
#~ " other *fields*, it should specify "
#~ "those fields using :func:`~openerp.api.depends`::"
#~ msgstr ""

#~ msgid ""
#~ "for non-computed fields, the "
#~ ":func:`~openerp.api.onchange` decorator is used "
#~ "to provide new field values::"
#~ msgstr ""

#~ msgid ""
#~ "The :attr:`~openerp.api.Environment.cr` attribute on"
#~ " environments is the cursor for the"
#~ " current database transaction and allows"
#~ " executing SQL directly, either for "
#~ "queries which are difficult to express"
#~ " using the ORM (e.g. complex joins)"
#~ " or for performance reasons::"
#~ msgstr ""

#~ msgid ""
#~ "Because models use the same cursor "
#~ "and the :class:`~openerp.api.Environment` holds "
#~ "various caches, these caches must be "
#~ "invalidated when *altering* the database "
#~ "in raw SQL, or further uses of "
#~ "models may become incoherent. It is "
#~ "necessary to clear caches when using "
#~ "``CREATE``, ``UPDATE`` or ``DELETE`` in "
#~ "SQL, but not ``SELECT`` (which simply"
#~ " reads the database)."
#~ msgstr ""

#~ msgid ""
#~ "Clearing caches can be performed using"
#~ " the :meth:`~openerp.api.Environment.invalidate_all` "
#~ "method of the :class:`~openerp.api.Environment` "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "values of the :class:`~openerp.api.Environment` "
#~ "(cursor, user id and context) are "
#~ "passed explicitly to methods instead"
#~ msgstr ""

#~ msgid ""
#~ "record data (:attr:`~openerp.models.Model.ids`) are"
#~ " passed explicitly to methods, and "
#~ "possibly not passed at all"
#~ msgstr ""

#~ msgid ":func:`~openerp.api.model`"
#~ msgstr ""

#~ msgid ":func:`~openerp.api.multi`"
#~ msgstr ""

#~ msgid ":func:`~openerp.api.returns`"
#~ msgstr ""

#~ msgid "Main super-class for regular database-persisted OpenERP models."
#~ msgstr ""

#~ msgid "OpenERP models are created by inheriting from this class::"
#~ msgstr ""

#~ msgid ""
#~ "Name of the table backing the "
#~ "model created when "
#~ ":attr:`~openerp.models.Model._auto`, automatically "
#~ "generated by default."
#~ msgstr ""

#~ msgid ""
#~ "implements composition-based inheritance: the"
#~ " new model exposes all the fields "
#~ "of the :attr:`~openerp.models.Model._inherits`-ed "
#~ "model but stores none of them: the"
#~ " values themselves remain stored on "
#~ "the linked record."
#~ msgstr ""

#~ msgid ""
#~ "if the same field is defined on"
#~ " multiple :attr:`~openerp.models.Model._inherits`-ed"
#~ msgstr ""

#~ msgid "use :func:`~openerp.api.constrains`"
#~ msgstr ""

#~ msgid ""
#~ "For numeric fields "
#~ "(:class:`~openerp.fields.Integer`, "
#~ ":class:`~openerp.fields.Float`) the value should "
#~ "be of the corresponding type"
#~ msgstr ""

#~ msgid ""
#~ "For :class:`~openerp.fields.Boolean`, the value "
#~ "should be a :class:`python:bool`"
#~ msgstr ""

#~ msgid ""
#~ "For :class:`~openerp.fields.Selection`, the value"
#~ " should match the selection values "
#~ "(generally :class:`python:str`, sometimes "
#~ ":class:`python:int`)"
#~ msgstr ""

#~ msgid ""
#~ "For :class:`~openerp.fields.Many2one`, the value "
#~ "should be the database identifier of "
#~ "the record to set"
#~ msgstr ""

#~ msgid ""
#~ "for historical and compatibility reasons, "
#~ ":class:`~openerp.fields.Date` and "
#~ ":class:`~openerp.fields.Datetime` fields use strings"
#~ " as values (written and read) rather"
#~ " than :class:`~python:datetime.date` or "
#~ ":class:`~python:datetime.datetime`. These date "
#~ "strings are UTC-only and formatted "
#~ "according to "
#~ ":const:`openerp.tools.misc.DEFAULT_SERVER_DATE_FORMAT` and "
#~ ":const:`openerp.tools.misc.DEFAULT_SERVER_DATETIME_FORMAT`"
#~ msgstr ""

#~ msgid ""
#~ ":class:`~openerp.fields.One2many` and "
#~ ":class:`~openerp.fields.Many2many` use a special "
#~ "\"commands\" format to manipulate the "
#~ "set of records stored in/associated with"
#~ " the field."
#~ msgstr ""

#~ msgid ""
#~ "removes the record of id ``id`` "
#~ "from the set, but does not delete"
#~ " it. Can not be used on "
#~ ":class:`~openerp.fields.One2many`. Can not be "
#~ "used in :meth:`~.create`."
#~ msgstr ""

#~ msgid ""
#~ "adds an existing record of id "
#~ "``id`` to the set. Can not be "
#~ "used on :class:`~openerp.fields.One2many`."
#~ msgstr ""

#~ msgid ""
#~ "removes all records from the set, "
#~ "equivalent to using the command ``3``"
#~ " on every record explicitly. Can not"
#~ " be used on :class:`~openerp.fields.One2many`."
#~ " Can not be used in :meth:`~.create`."
#~ msgstr ""

#~ msgid ""
#~ "replaces all existing records in the "
#~ "set by the ``ids`` list, equivalent "
#~ "to using the command ``5`` followed "
#~ "by a command ``4`` for each ``id``"
#~ " in ``ids``. Can not be used on"
#~ " :class:`~openerp.fields.One2many`."
#~ msgstr ""

#~ msgid "Research"
#~ msgstr ""

#~ msgid ""
#~ "either a function of one argument "
#~ "that returns a comparison key for "
#~ "each record, or ``None``, in which "
#~ "case records are ordered according the"
#~ " default model's order"
#~ msgstr ""

#~ msgid ""
#~ "Because the record rules and access "
#~ "control will have to be re-"
#~ "evaluated, the new recordset will not"
#~ " benefit from the current environment's "
#~ "data cache, so later data access "
#~ "may incur extra delays while re-"
#~ "fetching from the database."
#~ msgstr ""

#~ msgid ""
#~ "The new environment will not benefit "
#~ "from the current environment's data "
#~ "cache, so later data access may "
#~ "incur extra delays while re-fetching "
#~ "from the database."
#~ msgstr ""

#~ msgid "???"
#~ msgstr ""

#~ msgid "Duplicate record with given id updating it with default values"
#~ msgstr ""

#~ msgid "Identifier :class:`field <openerp.fields.Field>`"
#~ msgstr ""

#~ msgid ":class:`~openerp.field.Datetime`"
#~ msgstr ""

#~ msgid ":class:`~openerp.fields.Char`"
#~ msgstr ""

#~ msgid ":class:`~openerp.fields.Boolean`"
#~ msgstr ""

#~ msgid ":class:`~openerp.fields.Integer`"
#~ msgstr ""

#~ msgid ""
#~ "lifecycle stages of the object, used "
#~ "by the ``states`` attribute on "
#~ ":class:`fields <openerp.fields.Field>`"
#~ msgstr ""

#~ msgid ":class:`~openerp.fields.Selection`"
#~ msgstr ""

#~ msgid ":class:`~openerp.fields.Many2one`"
#~ msgstr ""

#~ msgid ""
#~ "Should raise :class:`~openerp.exceptions.ValidationError`"
#~ " if the validation failed."
#~ msgstr ""

#~ msgid ""
#~ "It is strongly recommended to use "
#~ ":func:`~.multi` and either iterate on "
#~ "the ``self`` recordset or ensure that"
#~ " the recordset is a single record "
#~ "with :meth:`~openerp.models.Model.ensure_one`."
#~ msgstr ""

#~ msgid ""
#~ "the default value for the field; "
#~ "this is either a static value, or"
#~ " a function taking a recordset and"
#~ " returning a value"
#~ msgstr ""

#~ msgid ""
#~ "The compute method has to assign "
#~ "the field on all records of the"
#~ " invoked recordset. The decorator "
#~ ":meth:`openerp.api.depends` must be applied on"
#~ " the compute method to specify the"
#~ " field dependencies; those dependencies are"
#~ " used to determine when to recompute"
#~ " the field; recomputation is automatic "
#~ "and guarantees cache/database consistency. "
#~ "Note that the same method can be"
#~ " used for several fields, you simply"
#~ " have to assign all the given "
#~ "fields in the method; the method "
#~ "will be invoked once for all those"
#~ " fields."
#~ msgstr ""

#~ msgid ""
#~ "A field is defined as class "
#~ "attribute on a model class. If the"
#~ " model is extended (see "
#~ ":class:`~openerp.models.Model`), one can also "
#~ "extend the field definition by "
#~ "redefining a field with the same "
#~ "name and same type on the "
#~ "subclass. In that case, the attributes"
#~ " of the field are taken from "
#~ "the parent class and overridden by "
#~ "the ones given in subclasses."
#~ msgstr ""

#~ msgid "Bases: :class:`openerp.fields._String`"
#~ msgstr ""

#~ msgid "Bases: :class:`openerp.fields.Field`"
#~ msgstr ""

#~ msgid ""
#~ "Returns the given timestamp converted to"
#~ " the client's timezone. This method "
#~ "is *not* meant for use as a "
#~ "_defaults initializer, because datetime fields"
#~ " are automatically converted upon display"
#~ " on client side. For _defaults you"
#~ " :meth:`fields.datetime.now` should be used "
#~ "instead."
#~ msgstr ""

#~ msgid "Bases: :class:`openerp.fields._Relational`"
#~ msgstr ""

#~ msgid "Bases: :class:`openerp.fields._RelationalMulti`"
#~ msgstr ""

#~ msgid "Bases: :class:`openerp.fields.Selection`"
#~ msgstr ""

#~ msgid ""
#~ "When using the "
#~ ":attr:`~openerp.models.Model._inherit` and "
#~ ":attr:`~openerp.models.Model._name` attributes together,"
#~ " Odoo creates a new model using "
#~ "the existing one (provided via "
#~ ":attr:`~openerp.models.Model._inherit`) as a base."
#~ " The new model gets all the "
#~ "fields, methods and meta-information "
#~ "(defaults & al) from its base."
#~ msgstr ""

#~ msgid ""
#~ "When using :attr:`~openerp.models.Model._inherit` "
#~ "but leaving out :attr:`~openerp.models.Model._name`,"
#~ " the new model replaces the existing"
#~ " one, essentially extending it in-"
#~ "place. This is useful to add new"
#~ " fields or methods to existing models"
#~ " (created in other modules), or to"
#~ " customize or reconfigure them (e.g. "
#~ "to change their default sort order):"
#~ msgstr ""

#~ msgid ""
#~ "The third inheritance mechanism provides "
#~ "more flexibility (it can be altered "
#~ "at runtime) but less power: using "
#~ "the :attr:`~openerp.models.Model._inherits` a model"
#~ " *delegates* the lookup of any field"
#~ " not found on the current model "
#~ "to \"children\" models. The delegation "
#~ "is performed via :class:`~openerp.fields.Reference`"
#~ " fields automatically set up on the"
#~ " parent model:"
#~ msgstr ""

#~ msgid ""
#~ "a field name of the current model,"
#~ " or a relationship traversal through "
#~ "a :class:`~openerp.fields.Many2one` using dot-"
#~ "notation e.g. ``'street'`` or "
#~ "``'partner_id.country'``"
#~ msgstr ""

#~ msgid ""
#~ "Takes the semantics of the model "
#~ "into account (i.e following the "
#~ "relationship field named by "
#~ ":attr:`~openerp.models.Model._parent_name`)."
#~ msgstr ""

#~ msgid ""
#~ ":meth:`~openerp.models.Model.search` returns a "
#~ "recordset, no point in e.g. browsing "
#~ "its result"
#~ msgstr ""

#~ msgid ""
#~ ":func:`~openerp.api.depends` on ``compute=`` methods"
#~ " **must be complete**, it must list"
#~ " **all** the fields and sub-fields"
#~ " which the compute method uses. It"
#~ " is better to have too many "
#~ "dependencies (will recompute the field "
#~ "in cases where that is not needed)"
#~ " than not enough (will forget to "
#~ "recompute the field and then values "
#~ "will be incorrect)"
#~ msgstr ""

#~ msgid ""
#~ "the decorators :func:`~openerp.api.model` and "
#~ ":func:`~openerp.api.multi` are for bridging "
#~ "*when calling from the old API "
#~ "context*, for internal or pure new-"
#~ "api (e.g. compute) they are useless"
#~ msgstr ""

#~ msgid ""
#~ "remove :attr:`~openerp.models.Model._default`, replace "
#~ "by ``default=`` parameter on corresponding "
#~ "fields"
#~ msgstr ""

#~ msgid ""
#~ "the normal new-api import is "
#~ "``from openerp import fields, models``. "
#~ "If compatibility decorators are necessary, "
#~ "use ``from openerp import api, fields,"
#~ " models``"
#~ msgstr ""

#~ msgid ""
#~ "avoid the :func:`~openerp.api.one` decorator, "
#~ "it probably does not do what you"
#~ " expect"
#~ msgstr ""

#~ msgid ""
#~ "remove explicit definition of "
#~ ":attr:`~openerp.models.Model.create_uid`, "
#~ ":attr:`~openerp.models.Model.create_date`, "
#~ ":attr:`~openerp.models.Model.write_uid` and "
#~ ":attr:`~openerp.models.Model.write_date` fields: they "
#~ "are now created as regular "
#~ "\"legitimate\" fields, and can be read"
#~ " and written like any other field "
#~ "out-of-the-box"
#~ msgstr ""

#~ msgid ""
#~ "when straight conversion is impossible "
#~ "(semantics can not be bridged) or "
#~ "the \"old API\" version is not "
#~ "desirable and could be improved for "
#~ "the new API, it is possible to "
#~ "use completely different \"old API\" and"
#~ " \"new API\" implementations for the "
#~ "same method name using :func:`~openerp.api.v7`"
#~ " and :func:`~openerp.api.v8`. The method "
#~ "should first be defined using the "
#~ "old-API style and decorated with "
#~ ":func:`~openerp.api.v7`, it should then be "
#~ "re-defined using the exact same "
#~ "name but the new-API style and "
#~ "decorated with :func:`~openerp.api.v8`. Calls "
#~ "from an old-API context will be"
#~ " dispatched to the first implementation "
#~ "and calls from a new-API context"
#~ " will be dispatched to the second "
#~ "implementation. One implementation can call"
#~ " (and frequently does) call the other"
#~ " by switching context."
#~ msgstr ""

#~ msgid ""
#~ "uses of :attr:`~openerp.models.Model._columns` or"
#~ " :attr:`~openerp.models.Model._all_columns` should be"
#~ " replaced by :attr:`~openerp.models.Model._fields`, "
#~ "which provides access to instances of"
#~ " new-style :class:`openerp.fields.Field` "
#~ "instances (rather than old-style "
#~ ":class:`openerp.osv.fields._column`)."
#~ msgstr ""

#~ msgid ""
#~ "Non-stored computed fields created using"
#~ " the new API style are *not* "
#~ "available in :attr:`~openerp.models.Model._columns` "
#~ "and can only be inspected through "
#~ ":attr:`~openerp.models.Model._fields`"
#~ msgstr ""

#~ msgid ""
#~ ":class:`~openerp.api.Environment` objects rely on"
#~ " some threadlocal state, which has to"
#~ " be set up before using them. "
#~ "It is necessary to do so using "
#~ "the :meth:`openerp.api.Environment.manage` context "
#~ "manager when trying to use the new"
#~ " API in contexts where it hasn't "
#~ "been set up yet, such as new "
#~ "threads or a Python interactive "
#~ "environment::"
#~ msgstr ""

#~ msgid ""
#~ "When calling such methods from a "
#~ "new API context, the system will "
#~ "automatically fill matched parameters from "
#~ "the current :class:`~openerp.api.Environment` (for"
#~ " :attr:`~openerp.api.Environment.cr`, "
#~ ":attr:`~openerp.api.Environment.user` and "
#~ ":attr:`~openerp.api.Environment.context`) or the "
#~ "current recordset (for ``id`` and "
#~ "``ids``)."
#~ msgstr ""

#~ msgid ""
#~ "disabling it entirely, by decorating a"
#~ " method with :func:`~openerp.api.noguess` there"
#~ " will be no bridging and methods "
#~ "will be called the exact same way"
#~ " from the new and old API "
#~ "styles"
#~ msgstr ""

#~ msgid ":func:`~openerp.api.cr`"
#~ msgstr ""

#~ msgid ":func:`~openerp.api.cr_uid`"
#~ msgstr ""

#~ msgid ":func:`~openerp.api.cr_uid_ids`"
#~ msgstr ""

#~ msgid ":func:`~openerp.api.cr_uid_id`"
#~ msgstr ""

#~ msgid ""
#~ "All of these methods have a "
#~ "``_context``-suffixed version (e.g. "
#~ ":func:`~openerp.api.cr_uid_context`) which also "
#~ "passes the current context *by keyword*."
#~ msgstr ""

#~ msgid ""
#~ "dual implementations using :func:`~openerp.api.v7`"
#~ " and :func:`~openerp.api.v8` will be "
#~ "ignored as they provide their own "
#~ "\"bridging\""
#~ msgstr ""

